webpackJsonp([10],{0:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__.p=function(){function make_url(){for(var seg,len,output="",i=0,l=arguments.length;i<l;i++)seg=arguments[i].toString(),len=seg.length,len>1&&"/"==seg.charAt(len-1)&&(seg=seg.substring(0,len-1)),output+="/"!=seg.charAt(0)?"/"+seg:seg;if("/"!=output){var segments=output.split("/"),firstseg=segments[1];if("static"==firstseg||"modules"==firstseg){var postfix=output.substring(firstseg.length+2,output.length);output="/"+firstseg+"/@"+window.$C.BUILD_NUMBER,window.$C.BUILD_PUSH_NUMBER&&(output+="."+window.$C.BUILD_PUSH_NUMBER),"app"==segments[2]&&(output+=":"+getConfigValue("APP_BUILD",0)),output+="/"+postfix}}var root=getConfigValue("MRSPARKLE_ROOT_PATH","/"),djangoRoot=getConfigValue("DJANGO_ROOT_PATH",""),locale=getConfigValue("LOCALE","en-US"),combinedPath="";return combinedPath=djangoRoot&&output.substring(0,djangoRoot.length)===djangoRoot?output.replace(djangoRoot,djangoRoot+"/"+locale.toLowerCase()):"/"+locale+output,""==root||"/"==root?combinedPath:root+combinedPath}function getConfigValue(key,defaultValue){if(window.$C&&window.$C.hasOwnProperty(key))return window.$C[key];if(void 0!==defaultValue)return defaultValue;throw new Error("getConfigValue - "+key+" not set, no default provided")}return make_url("/static/app/Splunk_ML_Toolkit/")+"/"}(),__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__(48),__webpack_require__("splunkjs/mvc/utils"),__webpack_require__("splunkjs/mvc/checkboxview"),__webpack_require__("splunkjs/mvc/dropdownview"),__webpack_require__("splunkjs/mvc/radiogroupview"),__webpack_require__("splunkjs/mvc/singleview"),__webpack_require__(229),__webpack_require__(233),__webpack_require__(230),__webpack_require__(234),__webpack_require__(236),__webpack_require__(240),__webpack_require__(283),__webpack_require__(231),__webpack_require__(241),__webpack_require__(44),__webpack_require__(265),__webpack_require__(243),__webpack_require__(242),__webpack_require__(284),__webpack_require__(266),__webpack_require__(246),__webpack_require__(285),__webpack_require__(286),__webpack_require__(249),__webpack_require__(261),__webpack_require__(235),__webpack_require__(239),__webpack_require__(251)],__WEBPACK_AMD_DEFINE_RESULT__=function(_jquery,_underscoreMltk,_utils,_checkboxview,_dropdownview,_radiogroupview,_singleview,_tableview,_Footer,_Master,_DrilldownLinker,_QueryHistoryTable,_SearchStringDisplay,_Slider,_Spinners,_ColorPalette,_Options,_ParseAlgorithmParameters,_ShowcaseHistorySerializer,_compactTemplateString,_getFieldFromData,_ControlValidityStore,_NumberValidator,_ClassificationAlertModal,_Master3,_EnhancedMultiDropdownView,_EnhancedTextInputView,_Forms,_Searches,_BaseAssistantView){"use strict";function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj["default"]=obj,newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var _jquery2=_interopRequireDefault(_jquery),_underscoreMltk2=_interopRequireDefault(_underscoreMltk),_utils2=_interopRequireDefault(_utils),_checkboxview2=_interopRequireDefault(_checkboxview),_dropdownview2=_interopRequireDefault(_dropdownview),_radiogroupview2=_interopRequireDefault(_radiogroupview),_singleview2=_interopRequireDefault(_singleview),_tableview2=_interopRequireDefault(_tableview),_Footer2=_interopRequireDefault(_Footer),_Master2=_interopRequireDefault(_Master),DrilldownLinker=_interopRequireWildcard(_DrilldownLinker),_QueryHistoryTable2=_interopRequireDefault(_QueryHistoryTable),_Slider2=_interopRequireDefault(_Slider),Spinners=_interopRequireWildcard(_Spinners),ColorPalette=_interopRequireWildcard(_ColorPalette),_Options2=_interopRequireDefault(_Options),_ParseAlgorithmParameters2=_interopRequireDefault(_ParseAlgorithmParameters),_ShowcaseHistorySerializer2=_interopRequireDefault(_ShowcaseHistorySerializer),_compactTemplateString2=_interopRequireDefault(_compactTemplateString),_getFieldFromData2=_interopRequireDefault(_getFieldFromData),_ControlValidityStore2=_interopRequireDefault(_ControlValidityStore),NumberValidator=_interopRequireWildcard(_NumberValidator),_ClassificationAlertModal2=_interopRequireDefault(_ClassificationAlertModal),_Master4=_interopRequireDefault(_Master3),_EnhancedMultiDropdownView2=_interopRequireDefault(_EnhancedMultiDropdownView),_EnhancedTextInputView2=_interopRequireDefault(_EnhancedTextInputView),Forms=_interopRequireWildcard(_Forms),Searches=_interopRequireWildcard(_Searches),_BaseAssistantView2=_interopRequireDefault(_BaseAssistantView),_templateObject=_taggedTemplateLiteral(["| kvstorelookup ",'\n                                   | eval Actions=model_name\n                                   | eval test_fraction = 100-training_fraction\n                                   | eval "Split for training / test" = if(test_fraction > 0, training_fraction + " / " + test_fraction, "no split"),\n                                          "Algorithm" = if(classification_algorithm == "" OR isnull(classification_algorithm), "','", classification_algorithm),\n                                          "Algorithm Settings" = classification_algorithm_params,\n                                          "Fields to use for predicting" = features,\n                                          "Model name" = model_name,\n                                          "Search query" = search_query,\n                                          "Preprocess Settings" = preprocess_query,\n                                          "Field to predict" = target,\n                                          "Precision" = round(precision, 2),\n                                          "Recall" = round(recall, 2),\n                                          "Accuracy" = round(accuracy, 2),\n                                          "F1" = round(f1, 2)'],["| kvstorelookup ",'\n                                   | eval Actions=model_name\n                                   | eval test_fraction = 100-training_fraction\n                                   | eval "Split for training / test" = if(test_fraction > 0, training_fraction + " / " + test_fraction, "no split"),\n                                          "Algorithm" = if(classification_algorithm == "" OR isnull(classification_algorithm), "','", classification_algorithm),\n                                          "Algorithm Settings" = classification_algorithm_params,\n                                          "Fields to use for predicting" = features,\n                                          "Model name" = model_name,\n                                          "Search query" = search_query,\n                                          "Preprocess Settings" = preprocess_query,\n                                          "Field to predict" = target,\n                                          "Precision" = round(precision, 2),\n                                          "Recall" = round(recall, 2),\n                                          "Accuracy" = round(accuracy, 2),\n                                          "F1" = round(f1, 2)']),_templateObject2=_taggedTemplateLiteral(["| loadjob $","$\n                               | head 1\n                               | transpose\n                               | fields column"],["| loadjob $","$\n                               | head 1\n                               | transpose\n                               | fields column"]),_templateObject3=_taggedTemplateLiteral(['| loadjob $variableSearchJobIdToken$\n                               | search column != "column" AND column != "_*"'],['| loadjob $variableSearchJobIdToken$\n                               | search column != "column" AND column != "_*"']),_templateObject4=_taggedTemplateLiteral(['| loadjob $variableSearchJobIdToken$\n                               | search column != "column" AND column != $classificationTargetToken|s$ AND (column != "_*" OR column = "_time")'],['| loadjob $variableSearchJobIdToken$\n                               | search column != "column" AND column != $classificationTargetToken|s$ AND (column != "_*" OR column = "_time")']),_templateObject5=_taggedTemplateLiteral(["| loadjob $searchBarSearchJobIdToken$\n                               | sample partitions=100"],["| loadjob $searchBarSearchJobIdToken$\n                               | sample partitions=100"]),_templateObject6=_taggedTemplateLiteral(["| loadjob $dataPartitionSearchJobIdToken$\n                               | search partition_number < $trainingSetFractionToken$\n                               | fields - partition_number\n                               $preprocessTrainingSPLToken$\n                               ",""],["| loadjob $dataPartitionSearchJobIdToken$\n                               | search partition_number < $trainingSetFractionToken$\n                               | fields - partition_number\n                               $preprocessTrainingSPLToken$\n                               ",""]),_templateObject7=_taggedTemplateLiteral(["| loadjob $dataPartitionSearchJobIdToken$\n                               | search partition_number >= $testSetFractionToken$\n                               | fields - partition_number\n                               $preprocessTestingSPLToken$"],["| loadjob $dataPartitionSearchJobIdToken$\n                               | search partition_number >= $testSetFractionToken$\n                               | fields - partition_number\n                               $preprocessTestingSPLToken$"]),ClassificationView=_BaseAssistantView2["default"].extend({headerOptions:{title:"Predict Categorical Fields",description:"Predict the value of a categorical field using the values of other fields in that event."},tabOptions:{primaryTabTitle:"Create New Model",historyTabTitle:"Load Existing Settings"},showScheduleButton:!0,submitButtonText:"Fit Model",searchBarTooltip:"The events returned should have at least one categorical field and one other field.",render:function(){function getPreprocessingFitArray(){return self.assistantFormView.preprocessPanel.buildFitSPLArray(Forms.getToken("modelNameToken"))}function getFitCommentsArray(){var fitSPLArray=self.assistantFormView.preprocessPanel.buildFitSPLArray(Forms.getToken("modelNameToken")),commentsArray=new Array(fitSPLArray.length);return commentsArray.length>0&&(commentsArray[0]="apply preprocessing steps"),commentsArray.concat("fit and save a model using the entire dataset and provided parameters")}function getApplyArray(){var applySPLArray=self.assistantFormView.preprocessPanel.buildApplySPLArray(Forms.getToken("modelNameToken"));return applySPLArray.concat("| apply $modelNameToken|s$")}function getApplyCommentsArray(){var applySPLArray=self.assistantFormView.preprocessPanel.buildApplySPLArray(Forms.getToken("modelNameToken")),commentsArray=new Array(applySPLArray.length);return commentsArray.length>0&&(commentsArray[0]="apply preprocessing models"),commentsArray.concat('apply the model to the entire dataset to predict "'+Forms.getToken("classificationTargetToken")+'"')}function startPostProcessingSearches(){Searches.startSearch("dataAndPredictionsTableSearch"),Searches.startSearch("confusionMatrixTableSearch"),Searches.startSearch("classificationstatisticsSearch")}function updateForm(newIsRunningValue,message){if(null!=newIsRunningValue&&(isRunning=newIsRunningValue),classificationAlgorithmControl.settings.set("disabled",isRunning),targetVariableControl.settings.set("disabled",isRunning),featuresVariableControl.settings.set("disabled",isRunning),trainingSetFractionSlider.setDisabled(isRunning),modelNameInputControl.settings.set("disabled",isRunning),_underscoreMltk2["default"].each(classificationAlgorithmParamsControls,function(control){return control.control.settings.set("disabled",isRunning)}),self.assistantFormView.preprocessPanel.setDisabled(isRunning),isRunning)self.assistantFormView.footer.setDisabled(isRunning,message);else{var classificationTargetToken=Forms.getToken("classificationTargetToken"),classificationFeaturesToken=Forms.getToken("classificationFeaturesToken"),fieldsValid=null!=classificationTargetToken&&classificationTargetToken.length>0&&null!=classificationFeaturesToken&&classificationFeaturesToken.length>0;self.assistantFormView.footer.setDisabled(!fieldsValid),self.assistantFormView.footer.controls.submitButton.text(submitButtonText)}}function submitForm(){!self.assistantFormView.footer.getDisabled()&&controlValidity.getAll()&&(currentSampleSearch=null,self.hideErrorMessage(),self.hideResults(),Forms.setToken("preprocessTrainingSPLToken",getPreprocessingFitArray().join("")),Forms.setToken("preprocessTestingSPLToken",Forms.parseTemplate(getApplyArray().join(""))),dataAndPredictionsPanel.setSchedulingDisabled(Forms.getToken("modelNameToken")===defaultModelName,"You must specify a model name to schedule alerts."),self.model.experiment?(updateExperiment(),self.model.experiment.save({},{success:function(model,response){Searches.getSearchManager("dataPartitionSearch").startSearch()},error:function(model,response){self.showErrorMessage(response.responseText)}})):Searches.getSearchManager("dataPartitionSearch").startSearch())}function updateExperiment(){self.addBasicExperimentInfo();var preprocessingModels=self.assistantFormView.preprocessPanel.preprocessCollection.models,searchStages=_underscoreMltk2["default"].map(preprocessingModels,function(model){return model.asSearchStage()}),mainSearchStage={type:"main",settings:{algorithm:Forms.getToken("classificationAlgorithmToken"),params:getClassificationAlgorithmParamsList(),targetVariable:Forms.getToken("classificationTargetToken"),featureVariables:Forms.getToken("rawClassificationFeaturesToken"),modelName:Forms.getToken("modelNameToken")||""}};searchStages.push(mainSearchStage),self.model.experiment.set({searchStages:searchStages})}function setCurrentSampleSearch(sampleSearch){if(currentSampleSearch=_underscoreMltk2["default"].extend({},{classificationAlgorithm:defaultClassificationAlgorithm,classificationAlgorithmParams:[],trainingFraction:50},sampleSearch),classificationAlgorithmControl.val(currentSampleSearch.classificationAlgorithm),null!=classificationAlgorithmParamsList[currentSampleSearch.classificationAlgorithm]){var parsedParams=(0,_ParseAlgorithmParameters2["default"])(currentSampleSearch.classificationAlgorithmParams);classificationAlgorithmParamsList[currentSampleSearch.classificationAlgorithm].forEach(function(paramName){var control=classificationAlgorithmParamsControls[paramName],paramValue=parsedParams[paramName];"checkbox"===control.control._viz.attr("type")?Forms.setCheckboxViewFromString(control.control,paramValue,control.control.options["default"]):control.control.val(null!=paramValue?paramValue:control.control.options["default"])})}null!=currentSampleSearch.modelName&&modelNameInputControl.val(currentSampleSearch.modelName),self.assistantFormView.searchBarControl.setProperties(sampleSearch.value,sampleSearch.earliestTime,sampleSearch.latestTime),trainingSetFractionSlider.val(currentSampleSearch.trainingFraction)}function updateClassificationAlgorithmParamsControls(){var classificationAlgorithm=Forms.getToken("classificationAlgorithmToken"),controlWrappers=[];null!=classificationAlgorithmParamsList[classificationAlgorithm]&&(controlValidity.clear(_underscoreMltk2["default"].map(classificationAlgorithmParamsControls,function(control){return control.control.id})),classificationAlgorithmParamsList[classificationAlgorithm].forEach(function(paramName){var control=classificationAlgorithmParamsControls[paramName];control.control.val(control.control.options["default"]),controlWrappers.push(control.wrapper)})),classificationAlgorithmParamsControlsWrapper.children().detach(),classificationAlgorithmParamsControlsWrapper.append(controlWrappers)}function getClassificationAlgorithmParamsList(){var classificationAlgorithm=Forms.getToken("classificationAlgorithmToken"),algorithmParams=[];return null!=classificationAlgorithmParamsList[classificationAlgorithm]&&classificationAlgorithmParamsList[classificationAlgorithm].forEach(function(paramName){var tokenValue=Forms.getToken(paramName+"Token");null!=tokenValue&&""!==tokenValue&&algorithmParams.push(paramName+"="+tokenValue)}),algorithmParams}function updateClassificationAlgorithmParamsToken(){var algorithmParams=getClassificationAlgorithmParamsList().join(" ");Forms.setToken("classificationAlgorithmParamsToken",algorithmParams)}var self=this;_BaseAssistantView2["default"].prototype.render.call(this);var _utils$getPageInfo=_utils2["default"].getPageInfo(),showcaseName=_utils$getPageInfo.page,defaultModelName=_Options2["default"].getOptionByName("defaultModelName"),defaultClassificationAlgorithm="LogisticRegression",currentSampleSearch=null,isRunning=!1,controlValidity=new _ControlValidityStore2["default"],classificationAlgorithmParamsList={LogisticRegression:["fit_intercept"],SVM:["C","gamma"],RandomForestClassifier:["n_estimators","max_depth","max_features","min_samples_split","max_leaf_nodes"],GaussianNB:[],BernoulliNB:["alpha","binarize","fit_prior"],DecisionTreeClassifier:["max_depth","max_features","min_samples_split","max_leaf_nodes","splitter","criterion"]},submitButtonText="Fit Model",historyCollectionId=showcaseName+"_history",historySerializer=new _ShowcaseHistorySerializer2["default"](historyCollectionId,{search_query:null,earliest_time:null,latest_time:null,classification_algorithm:null,classification_algorithm_params:null,target:null,features:null,training_fraction:null,model_name:null,preprocess_query:null,_time:null,precision:null,recall:null,accuracy:null,f1:null},function(){Searches.getSearchManager("queryHistorySearch").startSearch()});self.assistantFormView.preprocessPanel.render().$el.appendTo(self.assistantFormView.preprocessWrapper),function(){Searches.setSearch("queryHistorySearch",{searchString:(0,_compactTemplateString2["default"])(_templateObject,historyCollectionId,defaultClassificationAlgorithm)})}();var classificationAlgorithmControl=function(){var control=new _dropdownview2["default"]({id:"classificationAlgorithmControl",el:self.$el.find("#classificationAlgorithmControl"),showClearButton:!1,choices:Object.keys(classificationAlgorithmParamsList).map(function(algorithm){return{value:algorithm}})}).on("change",function(val){Forms.setToken("classificationAlgorithmToken",val),updateClassificationAlgorithmParamsControls(),updateClassificationAlgorithmParamsToken()}).render();return control.$el.prev("label").tooltip({title:"Select an algorithm to use for predicting field values."}),control}(),featuresVariableControl=function(){var control=new _EnhancedMultiDropdownView2["default"]({id:"featuresVariableControl",managerid:"featuresVariableSearch",el:self.$el.find("#featuresVariableControl"),labelField:"column",valueField:"column",width:400,allowCustomValues:!0});return control.$el.prev("label").tooltip({title:"Select the field(s) to use for predicting the value of the selected categorical field."}),control.on("datachange",function(){if(null!=currentSampleSearch){var choices=Forms.getChoiceViewChoices(control),validChoices=Forms.intersect(choices,currentSampleSearch.featuresVariables,!0);control.val(validChoices),currentSampleSearch.autostart!==!1&&self.assistantFormView.footer.controls.submitButton.trigger("submit"),currentSampleSearch=null}}),control.on("change",function(){var values=control.val();Forms.setToken("rawClassificationFeaturesToken",values),null!=values&&values.length>0?Forms.setToken("classificationFeaturesToken",values.map(Forms.escape).join(" ")):Forms.unsetToken("classificationFeaturesToken"),updateForm()}),control.render(),control}(),targetVariableControl=function(){var control=new _dropdownview2["default"]({id:"targetVariableControl",managerid:"targetVariableSearch",el:self.$el.find("#targetVariableControl"),labelField:"column",valueField:"column",showClearButton:!1});return control.$el.prev("label").tooltip({title:"Select a categorical field to predict. The field should have at most 100 distinct values."}),control.on("datachange",function(){if(null!=currentSampleSearch&&self.assistantFormView.preprocessPanel.isPreprocessingComplete()){var targetVariable=currentSampleSearch.targetVariable,choices=Forms.getChoiceViewChoices(control);choices.indexOf(targetVariable)>=0&&control.val(targetVariable)}}),control.on("change",function(){Forms.unsetToken(["classificationFeaturesToken","classificationTargetToken","classificationPredictionToken"]),Forms.clearChoiceView(featuresVariableControl);var value=control.val();null!=value&&value.length>0&&(Forms.setToken("classificationTargetToken",value),Forms.setToken("classificationPredictionToken","predicted("+value+")")),updateForm()}),control.render(),control}(),trainingSetFractionSlider=function(){function updateTrainingSetFractionSlider(trainingFraction){var testFraction=100-trainingFraction,sliderText="",tooltipText="";testFraction>0?(sliderText=trainingFraction+" / "+testFraction,tooltipText="Select the percentage of the events to use for training and for testing, respectively."):(sliderText="no split",tooltipText="100% of the data will be used for training. Note: the test statistics reflect how well the model predicts the training data."),sliderValue$El.text(sliderText),slider$El.prev("label").tooltip("destroy").tooltip({title:tooltipText})}var slider$El=self.$el.find("#trainingSetFractionSlider"),sliderValue$El=self.$el.find("#trainingSetFractionSliderValue");return new _Slider2["default"](slider$El,10,100,0,10,function(value){updateTrainingSetFractionSlider(value)},function(value){Forms.setToken("trainingSetFractionToken",value),Forms.setToken("testSetFractionToken",100===value?0:value),updateTrainingSetFractionSlider(value)})}(),classificationAlgorithmParamsControlsWrapper=self.$el.find("#classificationAlgorithmParamsControlsWrapper"),classificationAlgorithmParamsControls=function(){function textInputOnChange(control,value,tokenName){var isValid=control.getValidity();controlValidity.set(control.id,isValid),Forms[isValid?"setToken":"unsetToken"](tokenName,value),updateClassificationAlgorithmParamsToken()}var controls={fit_intercept:{},C:{},gamma:{},n_estimators:{},max_depth:{},max_features:{},min_samples_split:{},alpha:{},binarize:{},fit_prior:{},max_leaf_nodes:{},splitter:{},criterion:{}};return controls.fit_intercept.control=new _checkboxview2["default"]({id:"fit_interceptControl",el:(0,_jquery2["default"])("<div>"),"default":!0}).on("change",function(value){Forms.setToken("fit_interceptToken",value),updateClassificationAlgorithmParamsToken()}).render(),controls.fit_intercept.wrapper=Forms.createInputControlWrapper((0,_jquery2["default"])("<label>").addClass("checkbox").append(controls.fit_intercept.control.$el,(0,_jquery2["default"])("<span>").text("estimate the intercept")),"Fit Intercept","Whether or not the model should include an implicit intercept term."),controls.C.control=new _EnhancedTextInputView2["default"]({id:"CControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive number.",allowFloats:!0,min:0,minExclusive:!0}}).on("change",function(value){textInputOnChange(this,value,"CToken")}).render(),controls.C.wrapper=Forms.createInputControlWrapper(controls.C.control.$el,"C","Controls the degree of regularization when fitting the model. Defaults to 1.0."),controls.gamma.control=new _EnhancedTextInputView2["default"]({id:"gammaControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive number or zero.",allowFloats:!0,min:0}}).on("change",function(value){textInputOnChange(this,value,"gammaToken")}).render(),controls.gamma.wrapper=Forms.createInputControlWrapper(controls.gamma.control.$el,"Gamma","Controls the width of the radial basis function kernel. Defaults to 1/number of fields."),controls.n_estimators.control=new _EnhancedTextInputView2["default"]({id:"n_estimatorsControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive integer.",allowFloats:!1,min:1}}).on("change",function(value){textInputOnChange(this,value,"n_estimatorsToken")}).render(),controls.n_estimators.wrapper=Forms.createInputControlWrapper(controls.n_estimators.control.$el,"N Estimators","The number of trees in the forest. Defaults to 10."),controls.max_depth.control=new _EnhancedTextInputView2["default"]({id:"max_depthControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive integer.",allowFloats:!1,min:1}}).on("change",function(value){textInputOnChange(this,value,"max_depthToken")}).render(),controls.max_depth.wrapper=Forms.createInputControlWrapper(controls.max_depth.control.$el,"Max Depth",'The maximum depth of the tree. If unset, then nodes are expanded until all leaves are pure or until all leaves contain fewer samples than specified by "Min Samples Split". Ignored if "Max Leaf Nodes" is set.'),controls.max_features.control=new _EnhancedTextInputView2["default"]({id:"max_featuresControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"custom",message:'Value must be a positive number or one of "auto", "sqrt", or "log2"',validate:function(value){return["auto","sqrt","log2"].indexOf(value)>=0||NumberValidator.validate(value,{allowFloats:!0,min:0,minExclusive:!0})}}}).on("change",function(value){textInputOnChange(this,value,"max_featuresToken")}).render(),controls.max_features.wrapper=Forms.createInputControlWrapper(controls.max_features.control.$el,"Max Features",{html:!0,title:'<div style="text-align: left">\n                        The number of features to consider at each split.\n                        <br>\n                        This field supports one of several value types:\n                        <ul>\n                            <li>integer: consider this many features at each split</li>\n                            <li>float: consider the total number of features multiplied by this value</li>\n                            <li>"sqrt": consider the square root of the total number of features</li>\n                            <li>"log2": consider the base-2 logarithm of the total number of features</li>\n                        </ul>\n                        If unset, consider all features at each split\n                    </div>'}),controls.min_samples_split.control=new _EnhancedTextInputView2["default"]({id:"min_samples_splitControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive integer.",allowFloats:!1,min:1}}).on("change",function(value){textInputOnChange(this,value,"min_samples_splitToken")}).render(),controls.min_samples_split.wrapper=Forms.createInputControlWrapper(controls.min_samples_split.control.$el,"Min Samples Split","The minimum number of samples required to split an internal node. Defaults to 2."),controls.alpha.control=new _EnhancedTextInputView2["default"]({id:"alphaControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive number or zero.",allowFloats:!0,min:0}}).on("change",function(value){textInputOnChange(this,value,"alphaToken")}).render(),controls.alpha.wrapper=Forms.createInputControlWrapper(controls.alpha.control.$el,"Alpha","Controls Laplace/Lidstone smoothing. Set to 0 for no smoothing. Defaults to 1.0."),controls.binarize.control=new _EnhancedTextInputView2["default"]({id:"binarizeControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be a positive number or zero.",allowFloats:!0,min:0}}).on("change",function(value){textInputOnChange(this,value,"binarizeToken")}).render(),controls.binarize.wrapper=Forms.createInputControlWrapper(controls.binarize.control.$el,"Binarize","The threshold used for converting numeric field values to the binary values expected by BernoulliNB. Values above the threshold are assumed to be 1, and values below the threshold are assumed to be 0. The default value is 0."),controls.fit_prior.control=new _checkboxview2["default"]({id:"fit_priorControl",el:(0,_jquery2["default"])("<div>"),"default":!0}).on("change",function(value){Forms.setToken("fit_priorToken",value),updateClassificationAlgorithmParamsToken()}).render(),controls.fit_prior.wrapper=Forms.createInputControlWrapper((0,_jquery2["default"])("<label>").addClass("checkbox").append(controls.fit_prior.control.$el,(0,_jquery2["default"])("<span>").text("learn class prior probabilities")),"Fit Prior","Whether or not to learn class prior probabilities. If not checked, classes are assumed to have uniform popularity."),controls.max_leaf_nodes.control=new _EnhancedTextInputView2["default"]({id:"max_leaf_nodesControl",el:(0,_jquery2["default"])("<div>"),"default":"",optional:!0,validator:{type:"number",message:"Value must be an integer greater than 1.",allowFloats:!1,min:2}}).on("change",function(value){textInputOnChange(this,value,"max_leaf_nodesToken")}).render(),controls.max_leaf_nodes.wrapper=Forms.createInputControlWrapper(controls.max_leaf_nodes.control.$el,"Max Leaf Nodes",'Grow the tree in best-first fashion until it has this many leaf nodes. Best nodes are defined as relative reduction in impurity. If unset, allows an unlimited number of leaf nodes. "Max Depth" is ignored if this is set.'),controls.splitter.control=new _radiogroupview2["default"]({id:"splitterControl",el:(0,_jquery2["default"])("<div>"),"default":"best",choices:[{value:"best"},{value:"random"}]}).on("change",function(value){var tokenName="splitterToken";Forms.setToken(tokenName,value),updateClassificationAlgorithmParamsToken()}).render(),controls.splitter.control.$el.addClass("mlts-radiogroup-inline"),controls.splitter.wrapper=Forms.createInputControlWrapper(controls.splitter.control.$el,"Splitter","The strategy used to choose the split at each node. Supported strategies are “best” to choose the best split and “random” to choose the best random split."),controls.criterion.control=new _radiogroupview2["default"]({id:"criterionControl",el:(0,_jquery2["default"])("<div>"),"default":"gini",choices:[{value:"gini"},{value:"entropy"}]}).on("change",function(value){var tokenName="criterionToken";Forms.setToken(tokenName,value),updateClassificationAlgorithmParamsToken()}).render(),controls.criterion.control.$el.addClass("mlts-radiogroup-inline"),controls.criterion.wrapper=Forms.createInputControlWrapper(controls.criterion.control.$el,"Criterion","The function to measure the quality of a split. Supported criteria are “gini” for the Gini impurity and “entropy” for the information gain."),controls}();new _QueryHistoryTable2["default"](self.$el.find("#queryHistoryPanel"),"queryHistorySearch",historyCollectionId,["Actions","_time","Search query","Preprocess Settings","Algorithm","Algorithm Settings","Field to predict","Fields to use for predicting","Split for training / test","Model name","Precision","Recall","Accuracy","F1"],submitButtonText,function(params,autostart){var sampleSearch={value:params.data["row.search_query"],targetVariable:params.data["row.target"],featuresVariables:"string"==typeof params.data["row.features"]?[params.data["row.features"]]:params.data["row.features"],modelName:params.data["row.model_name"],trainingFraction:params.data["row.training_fraction"],autostart:autostart,earliestTime:params.data["row.earliest_time"],latestTime:params.data["row.latest_time"]},preprocessSteps=params.data["row.preprocess_query"];null!=preprocessSteps&&(sampleSearch.preprocessSteps=preprocessSteps);var classificationAlgorithm=params.data["row.classification_algorithm"];
null!=classificationAlgorithm&&(sampleSearch.classificationAlgorithm=classificationAlgorithm);var classificationAlgorithmParams=params.data["row.classification_algorithm_params"];null!=classificationAlgorithmParams&&(sampleSearch.classificationAlgorithmParams="string"==typeof classificationAlgorithmParams?[classificationAlgorithmParams]:classificationAlgorithmParams),setCurrentSampleSearch(sampleSearch),self.assistantFormView.tabs.activate("primaryTab")}).render();var modelNameInputControl=function(){function updateModelName(){var modelName=control.val(),isValid=!control.settings.get("invalid");controlValidity.set(control.id,isValid),isValid&&Forms.setToken("modelNameToken",null==modelName||0===modelName.length?defaultModelName:modelName),self.assistantFormView.footer.setSchedulingDisabled(!isValid||Forms.getToken("modelNameToken")===defaultModelName,"You must specify a valid model name to fit a model on a schedule.")}var control=new _EnhancedTextInputView2["default"]({id:"modelNameInputControl",el:self.$el.find("#modelNameInputControl"),validator:{type:"modelName"},changeOnKeyup:!0,optional:!0}).render();return control.$el.prev("label").tooltip({title:"Enter a name for the model so you can refer to it later. You might include information like the name of the dataset, the field you are predicting, or the algorithm being used."}),control.on("change",updateModelName),control._viz.on("keyup",function(event){13===event.keyCode&&submitForm()}),updateModelName(),control}();this.assistantFormView.searchBarControl.events.on("change",function(){Forms.clearChoiceView(targetVariableControl,!0),Forms.clearChoiceView(featuresVariableControl,!0),Forms.unsetToken(["regressionTargetToken","regressionFeaturesToken","regressionPredictionToken","actualVsPredictedSortByEvalToken","actualVsPredictedSortByToken"]),updateForm(),Searches.startSearch("searchBarSearch")}),this.assistantFormView.footer.controls.submitButton.on("submit",function(){submitForm()});var dataAndPredictionsPanel=function(){var assistantPanel=new _Master2["default"]({el:self.$el.find("#dataAndPredictionsPanel"),title:"Prediction Results",viz:_tableview2["default"],vizOptions:{id:"dataAndPredictionsTable",managerid:"dataAndPredictionsTableSearch",drilldown:"none"},footerButtons:{scheduleAlertButton:!0}}),nonMatchingColor=ColorPalette.getColorByIndex(1);return assistantPanel.viz.on("rendered",function(){var tableRows=assistantPanel.viz.$el.find("tbody").find("tr");tableRows.each(function(){var confusionMatrixRowCells$El=(0,_jquery2["default"])(this).children(),actualCell=(0,_jquery2["default"])(confusionMatrixRowCells$El.get(0)),predictedCell=(0,_jquery2["default"])(confusionMatrixRowCells$El.get(1));actualCell.text()!==predictedCell.text()&&(actualCell.css("background-color",nonMatchingColor),predictedCell.css("background-color",nonMatchingColor))})}),assistantPanel}(),classificationstatisticsPanel=function(){var footer=new _Footer2["default"](self.$el.find("#classificationstatisticsPanel"));return footer.spinnerAnchor=footer.footer.parent(".mlts-panel"),footer}(),precisionStatisticPanel=function(){return new _Master2["default"]({el:self.$el.find("#precisionStatisticPanel"),title:"Precision",tooltip:"Better models produce precision closer to 1.",viz:_singleview2["default"],vizOptions:{id:"precisionStatisticViz",managerid:"classificationstatisticsSearch",field:"precision",numberPrecision:"0.00",height:30},footerButtons:!1})}(),recallStatisticPanel=function(){return new _Master2["default"]({el:self.$el.find("#recallStatisticPanel"),title:"Recall",tooltip:"Better models produce recall closer to 1.",viz:_singleview2["default"],vizOptions:{id:"recallStatisticViz",managerid:"classificationstatisticsSearch",field:"recall",numberPrecision:"0.00",height:30},footerButtons:!1})}(),accuracyStatisticPanel=function(){return new _Master2["default"]({el:self.$el.find("#accuracyStatisticPanel"),title:"Accuracy",tooltip:"The fraction of events that were classified correctly. Better models produce accuracy closer to 1.",viz:_singleview2["default"],vizOptions:{id:"accuracyStatisticViz",managerid:"classificationstatisticsSearch",field:"accuracy",numberPrecision:"0.00",height:30},footerButtons:!1})}(),fOneStatisticPanel=function(){return new _Master2["default"]({el:self.$el.find("#fOneStatisticPanel"),title:"F1",tooltip:"Better models produce an F1 score closer to 1.",viz:_singleview2["default"],vizOptions:{id:"fOneStatisticViz",managerid:"classificationstatisticsSearch",field:"f1",numberPrecision:"0.00",height:30},footerButtons:!1})}(),confusionMatrixPanel=function(){var assistantPanel=new _Master2["default"]({el:self.$el.find("#confusionMatrixPanel"),title:"Classification Results (Confusion Matrix)",tooltip:"Better models produce diagonals (top left to bottom right) closer to 100% in each cell.",viz:_tableview2["default"],vizOptions:{id:"confusionMatrixTable",managerid:"confusionMatrixTableSearch",drilldown:"none"}});return assistantPanel.viz.on("rendered",function(){var tableRows=assistantPanel.viz.$el.find("tbody").find("tr");tableRows.each(function(){var confusionMatrixRowCells$El=(0,_jquery2["default"])(this).children(),rowTotal=0,parsedValues=[];confusionMatrixRowCells$El.each(function(cellIndex){if(cellIndex>0){var cell$El=(0,_jquery2["default"])(this),cellValue=parseInt(cell$El.text(),10);rowTotal+=cellValue,parsedValues[cellIndex]=cellValue}}),confusionMatrixRowCells$El.each(function(cellIndex){var cellValue=parsedValues[cellIndex];if(cellIndex>0&&rowTotal>0&&!isNaN(cellValue)){var cell$El=(0,_jquery2["default"])(this),percentage=cellValue/rowTotal;cell$El.css("background-color",ColorPalette.getGradientColor(37,36,percentage)),cell$El.text(cellValue+" ("+Math.round(1e3*percentage)/10+"%)")}})})}),assistantPanel}();return this.listenTo(self.assistantFormView.preprocessPanel,"stepChanged",function(){Forms.clearChoiceView(targetVariableControl,!0)}),this.listenTo(this.assistantFormView.preprocessPanel.preprocessCollection,"change:state",function(){updateForm(this.assistantFormView.preprocessPanel.isPreprocessingRunning(),"Preprocessing...")}),function(){var searchBarSearch=Searches.getSearchManager("searchBarSearch");searchBarSearch.on("onStartCallback",function(){self.hideErrorMessage(),self.hideResults()}),searchBarSearch.on("onDoneCallback",function(searchManager){null!=currentSampleSearch&&null!=currentSampleSearch.preprocessSteps&&self.assistantFormView.preprocessPanel.loadSteps(currentSampleSearch.preprocessSteps),self.hideErrorMessage()}),searchBarSearch.on("onErrorCallback",function(errorMessage){Forms.clearChoiceViewOptions(targetVariableControl),self.showErrorMessage(errorMessage),self.hideResults()})}(),function(){Searches.setSearch("variableSearch",{targetJobIdTokenName:"variableSearchJobIdToken",searchString:(0,_compactTemplateString2["default"])(_templateObject2,self.assistantFormView.preprocessSearchJobIdTokenName),onErrorCallback:function(errorMessage){self.showErrorMessage(errorMessage),self.hideResults()}})}(),function(){Searches.setSearch("targetVariableSearch",{searchString:(0,_compactTemplateString2["default"])(_templateObject3),onErrorCallback:function(errorMessage){self.showErrorMessage(errorMessage),self.hideResults()}})}(),function(){Searches.setSearch("featuresVariableSearch",{searchString:(0,_compactTemplateString2["default"])(_templateObject4),onErrorCallback:function(errorMessage){self.showErrorMessage(errorMessage),self.hideResults()}})}(),function(){Searches.setSearch("dataPartitionSearch",{autostart:!1,targetJobIdTokenName:"dataPartitionSearchJobIdToken",searchString:(0,_compactTemplateString2["default"])(_templateObject5),onStartCallback:function(){updateForm(!0,"Fitting Model...")},onDoneCallback:function(){Searches.getSearchManager("trainingSearch").startSearch()},onErrorCallback:function(errorMessage){updateForm(!1),self.showErrorMessage(errorMessage),self.hideResults()}})}(),function(){var sharedSearchString="| fit $classificationAlgorithmToken$ $classificationAlgorithmParamsToken$ $classificationTargetToken|s$ from $classificationFeaturesToken$ into $modelNameToken|s$";self.assistantFormView.footer.controls.openInSearchButton.on("click",function(){var search=DrilldownLinker.createSearch([self.model.searchInfo.get("baseSearchString")].concat(getPreprocessingFitArray(),[sharedSearchString]),self.model.searchInfo.get("baseTimerange"));window.open(DrilldownLinker.getUrl("search",search),"_blank")}),self.assistantFormView.footer.controls.showSPLButton.on("click",function(){(0,_SearchStringDisplay.showSearchStringModal)("trainingSearchStringDisplayModal","Fit a model on all your data in search",[self.model.searchInfo.get("baseSearchString")].concat(getPreprocessingFitArray(),sharedSearchString),[null].concat(getFitCommentsArray()),self.model.searchInfo.get("baseTimerange"))}),self.assistantFormView.footer.controls.scheduleButton.on("click",function(){var scheduledSearchModal=new _Master4["default"]({searchString:Forms.parseTemplate([self.model.searchInfo.get("baseSearchString")].concat(getPreprocessingFitArray(),[sharedSearchString]).join("")),earliestTime:self.model.searchInfo.get("baseTimerange").earliest_time,latestTime:self.model.searchInfo.get("baseTimerange").latest_time});scheduledSearchModal.render().appendTo((0,_jquery2["default"])("body")).show()}),Searches.setSearch("trainingSearch",{targetJobIdTokenName:"trainingJobIdToken",autostart:!1,searchString:(0,_compactTemplateString2["default"])(_templateObject6,sharedSearchString),onStartCallback:function(){self.hideErrorMessage()},onDoneCallback:function(){Searches.getSearchManager("testingSearch").startSearch()},onErrorCallback:function(errorMessage){updateForm(!1),self.showErrorMessage(errorMessage),self.hideResults()}})}(),function(){Searches.setSearch("testingSearch",{targetJobIdTokenName:"testingJobIdToken",autostart:!1,searchString:(0,_compactTemplateString2["default"])(_templateObject7),onStartCallback:function(){var searchAttributes=Searches.getSearchManager("searchBarSearch").search.attributes,testingSearchSid=Searches.getSid(Searches.getSearchManager("testingSearch"));historySerializer.persist(testingSearchSid,{search_query:searchAttributes.search,earliest_time:searchAttributes.earliest_time,latest_time:searchAttributes.latest_time,preprocess_query:self.assistantFormView.preprocessPanel.getSerializedList(),classification_algorithm:Forms.getToken("classificationAlgorithmToken"),classification_algorithm_params:getClassificationAlgorithmParamsList(),target:Forms.getToken("classificationTargetToken"),features:Forms.getToken("rawClassificationFeaturesToken"),training_fraction:parseInt(Forms.getToken("trainingSetFractionToken"),10),model_name:Forms.getToken("modelNameToken"),_time:parseInt((new Date).valueOf()/1e3,10)})},onDoneCallback:function(){self.showResults(),startPostProcessingSearches()},onErrorCallback:function(errorMessage){self.showErrorMessage(errorMessage),self.hideResults()},onFinallyCallback:function(){updateForm(!1)}})}(),function(){var sharedSearchArray=["| table $classificationTargetToken|s$, $classificationPredictionToken|s$, $classificationFeaturesToken$"],vizQueryArray=[],vizQuerySearch=null;dataAndPredictionsPanel.openInSearchButton.on("click",function(){window.open(DrilldownLinker.getUrl("search",vizQuerySearch),"_blank")}),dataAndPredictionsPanel.showSPLButton.on("click",function(){(0,_SearchStringDisplay.showSearchStringModal)("dataAndPredictionsTableSearchStringDisplayModal",'Display the actual and predicted values of the "field to predict"',vizQueryArray,[null].concat(getApplyCommentsArray()),self.model.searchInfo.get("baseTimerange"))}),dataAndPredictionsPanel.scheduleAlertButton.on("click",function(){Searches.getSearchResults("dataPartitionSearch").on("data",function(searchResults,data){var predictedFieldIndex=data.fields.indexOf(Forms.getToken("classificationTargetToken"));predictedFieldIndex>-1&&new _ClassificationAlertModal2["default"]({baseSearchString:self.model.searchInfo.get("baseSearchString"),predictedFieldName:Forms.getToken("classificationPredictionToken"),predictedValues:_underscoreMltk2["default"].uniq(data.rows.map(function(row){return row[predictedFieldIndex]})).map(function(choice){return{value:choice}}),applySearchString:Forms.parseTemplate(getApplyArray().join(""))}).render().appendTo((0,_jquery2["default"])("body")).show()})}),Searches.setSearch("dataAndPredictionsTableSearch",{targetJobIdTokenName:"dataAndPredictionsTableToken",autostart:!1,searchString:["| loadjob $testingJobIdToken$"].concat(sharedSearchArray),onStartCallback:function(){vizQueryArray=[self.model.searchInfo.get("baseSearchString")].concat(getApplyArray(),sharedSearchArray),vizQuerySearch=DrilldownLinker.createSearch(vizQueryArray,self.model.searchInfo.get("baseTimerange")),DrilldownLinker.setSearchDrilldown(dataAndPredictionsPanel.title,vizQuerySearch)}})}(),function(){var sharedSearchArray=["| `confusionmatrix($classificationTargetToken|s$,$classificationPredictionToken|s$)`"],vizQueryArray=[],vizQuerySearch=null;confusionMatrixPanel.openInSearchButton.on("click",function(){window.open(DrilldownLinker.getUrl("search",vizQuerySearch),"_blank")}),confusionMatrixPanel.showSPLButton.on("click",function(){(0,_SearchStringDisplay.showSearchStringModal)("confusionMatrixTableSearchStringDisplayModal","Display classification results in a confusion matrix",vizQueryArray,[null].concat(getFitCommentsArray(),["use the `confusionmatrix` macro to show prediction results for each class"]),self.model.searchInfo.get("baseTimerange"))}),Searches.setSearch("confusionMatrixTableSearch",{searchString:["| loadjob $testingJobIdToken$"].concat(sharedSearchArray),autostart:!1,onStartCallback:function(){Spinners.showLoadingOverlay(confusionMatrixPanel.viz.$el),vizQueryArray=[self.model.searchInfo.get("baseSearchString")].concat(getApplyArray(),sharedSearchArray),vizQuerySearch=DrilldownLinker.createSearch(vizQueryArray,self.model.searchInfo.get("baseTimerange")),DrilldownLinker.setSearchDrilldown(confusionMatrixPanel.title,vizQuerySearch)},onFinallyCallback:function(){Spinners.hideLoadingOverlay(confusionMatrixPanel.viz.$el)}})}(),function(){var sharedSearchArray=["| `classificationstatistics($classificationTargetToken|s$, $classificationPredictionToken|s$)`"],vizQueryArray=[],vizQuerySearch=null;classificationstatisticsPanel.openInSearchButton.on("click",function(){window.open(DrilldownLinker.getUrl("search",vizQuerySearch),"_blank")}),classificationstatisticsPanel.showSPLButton.on("click",function(){(0,_SearchStringDisplay.showSearchStringModal)("classificationstatisticsSearchStringDisplayModal","Compute precision, recall, accuracy, and F1",vizQueryArray,[null].concat(getApplyCommentsArray(),["use the `classificationstatistics` macro to compute precision, recall, accuracy, and F1"]),self.model.searchInfo.get("baseTimerange"))}),Searches.setSearch("classificationstatisticsSearch",{searchString:["| loadjob $testingJobIdToken$"].concat(sharedSearchArray),autostart:!1,onStartCallback:function(){Spinners.showLoadingOverlay(classificationstatisticsPanel.spinnerAnchor),vizQueryArray=[self.model.searchInfo.get("baseSearchString")].concat(getApplyArray(),sharedSearchArray),vizQuerySearch=DrilldownLinker.createSearch(vizQueryArray,self.model.searchInfo.get("baseTimerange")),DrilldownLinker.setSearchDrilldown(precisionStatisticPanel.title,vizQuerySearch),DrilldownLinker.setSearchDrilldown(recallStatisticPanel.title,vizQuerySearch),DrilldownLinker.setSearchDrilldown(accuracyStatisticPanel.title,vizQuerySearch),DrilldownLinker.setSearchDrilldown(fOneStatisticPanel.title,vizQuerySearch)},onDataCallback:function(data){var evaluationStatistics={precision:0,recall:0,accuracy:0,f1:0};null!=data.fields&&null!=data.rows&&data.rows.length>0&&Object.keys(evaluationStatistics).forEach(function(key){var fieldValue=parseFloat((0,_getFieldFromData2["default"])(data,key)[0]);isNaN(fieldValue)||(evaluationStatistics[key]=fieldValue)});var testingSearchSid=Searches.getSid(Searches.getSearchManager("testingSearch"));historySerializer.persist(testingSearchSid,{precision:evaluationStatistics.precision,recall:evaluationStatistics.recall,accuracy:evaluationStatistics.accuracy,f1:evaluationStatistics.f1})},onFinallyCallback:function(){Spinners.hideLoadingOverlay(classificationstatisticsPanel.spinnerAnchor)}})}(),this.sampleSearchDeferred.done(setCurrentSampleSearch),setTimeout(updateForm,0),this},controlsTemplate:'\n        <div class="mlts-input">\n            <label>Algorithm</label>\n            <div id="classificationAlgorithmControl"></div>\n        </div>\n        <div class="mlts-input">\n            <label>Field to predict</label>\n            <div id="targetVariableControl"></div>\n        </div>\n        <div class="mlts-input">\n            <label>Fields to use for predicting</label>\n            <div id="featuresVariableControl"></div>\n        </div>\n        <div class="mlts-input">\n          <label>Split for training / test: <span id="trainingSetFractionSliderValue"></span></label>\n          <div id="trainingSetFractionSlider">\n          </div>\n        </div>\n        <div id="classificationAlgorithmParamsControlsWrapper"></div>\n        <div class="mlts-input">\n          <label>Save the model as</label>\n          <div id="modelNameInputControl"></div>\n        </div>\n    ',template:'\n\n        <div class="mlts-row mlts-results-row">\n            <div class="mlts-cell">\n             <div class="mlts-panel" id="dataAndPredictionsPanel">\n             </div>\n            </div>\n        </div>\n\n        <div class="mlts-row mlts-results-row">\n            <div class="mlts-cell">\n                <div class="mlts-panel" id="classificationstatisticsPanel">\n                    <div class="mlts-stats-panel">\n                        <div id="precisionStatisticPanel"></div>\n                        <div id="recallStatisticPanel"></div>\n                        <div id="accuracyStatisticPanel"></div>\n                        <div id="fOneStatisticPanel"></div>\n                    </div>\n                </div>\n            </div>\n            <div class="mlts-cell">\n                 <div class="mlts-panel" id="confusionMatrixPanel">\n                 </div>\n            </div>\n        </div>\n    '}),classificationView=new ClassificationView;classificationView.deferreds.viewReady.done(function(layout){layout.getContainerElement().appendChild(classificationView.render().el)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},285:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[module,exports,__webpack_require__("shim/jquery"),__webpack_require__(48),__webpack_require__("splunkjs/mvc/dropdownview"),__webpack_require__("splunkjs/mvc/multidropdownview"),__webpack_require__(237),__webpack_require__(247),__webpack_require__(235),__webpack_require__("views/shared/Modal")],__WEBPACK_AMD_DEFINE_RESULT__=function(module,exports,_jquery,_underscoreMltk,_dropdownview,_multidropdownview,_Messages,_AlertModal,_Forms,_Modal){"use strict";function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj["default"]=obj,newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}Object.defineProperty(exports,"__esModule",{value:!0});var _jquery2=_interopRequireDefault(_jquery),_underscoreMltk2=_interopRequireDefault(_underscoreMltk),_dropdownview2=_interopRequireDefault(_dropdownview),_multidropdownview2=_interopRequireDefault(_multidropdownview),Messages=_interopRequireWildcard(_Messages),_AlertModal2=_interopRequireDefault(_AlertModal),Forms=_interopRequireWildcard(_Forms),_Modal2=_interopRequireDefault(_Modal);exports["default"]=_Modal2["default"].extend({className:_Modal2["default"].CLASS_NAME+" "+_Modal2["default"].CLASS_MODAL_WIDE,initialize:function(options){this.options=_underscoreMltk2["default"].extend({onHiddenRemove:!0},this.options),_Modal2["default"].prototype.initialize.apply(this,arguments)},events:_jquery2["default"].extend({},_Modal2["default"].prototype.events,{"click .btn-primary":function(e){var _this=this;e.preventDefault();var submitButton=(0,_jquery2["default"])(e.target);this.removeAlert();var predictedValues=this.controls.value.val(),isValid=predictedValues.length>0;if(Messages.setFormInputStatus(this.controls.value,isValid),isValid){var equalityChecker=this.controls.type.val(),combiner="="===equalityChecker?"OR":"AND",alertString="| where "+predictedValues.map(function(value){return"'"+_this.options.predictedFieldName+"' "+equalityChecker+" "+Forms.escape(value)}).join(" "+combiner+" "),submitButtonText=submitButton.text();submitButton.attr("disabled",!0).text("Loading..."),new _AlertModal2["default"]({searchString:this.options.baseSearchString+" "+this.options.applySearchString+" "+alertString}).done(function(alertModal){_this.shown?(_this.hide(),alertModal.render().appendTo((0,_jquery2["default"])("body")).show()):alertModal.remove()}).fail(function(message){_this.setAlert(message),submitButton.attr("disabled",!1).text(submitButtonText)})}else this.setAlert("You must select at least one value.")},hide:function(){var _this2=this;Object.keys(this.controls).forEach(function(id){return _this2.controls[id].remove()})}}),render:function(){var _this3=this;return this.$el.html(_Modal2["default"].TEMPLATE),this.$el.addClass("classification-alert-modal"),this.$(_Modal2["default"].HEADER_TITLE_SELECTOR).text("Schedule an alert"),this.alertWrapper=(0,_jquery2["default"])('<div class="mlts-modal-alert">'),this.$(_Modal2["default"].BODY_SELECTOR).prepend(this.alertWrapper),this.$(_Modal2["default"].BODY_SELECTOR).append(_Modal2["default"].FORM_HORIZONTAL),this.$(_Modal2["default"].BODY_FORM_SELECTOR).append((0,_jquery2["default"])("<p>").text('Alert me when the value of "'+this.options.predictedFieldName+'"'),'\n            <span class="classification-alert-modal-type-control"></span>\n            <span class="classification-alert-modal-value-control"></span>\n        ').addClass("mlts-modal-form-inline"),this.controls={type:new _dropdownview2["default"]({id:"classificationAlertModalTypeControl",el:this.$el.find(".classification-alert-modal-type-control"),labelField:"label",valueField:"value",showClearButton:!1,selectFirstChoice:!0,choices:[{value:"=",label:"is any of"},{value:"!=",label:"isn't any of"}]}),value:new _multidropdownview2["default"]({id:"classificationAlertModalValueControl",el:this.$el.find(".classification-alert-modal-value-control"),allowCustomValues:!0,choices:this.options.predictedValues})},this.controls.value.on("change",function(value){_this3.removeAlert(),Messages.setFormInputStatus(_this3.controls.value,!0),Forms.getChoiceViewChoices(_this3.controls.value).length>0&&0===Forms.getChoiceViewChoices(_this3.controls.value,!0).length&&_this3.setAlert("Because you have selected all possible values, this alert will trigger whenever any values are predicted.","warning")}),Object.keys(this.controls).forEach(function(id){return _this3.controls[id].render()}),this.$(_Modal2["default"].FOOTER_SELECTOR).append(_Modal2["default"].BUTTON_CANCEL),this.$(_Modal2["default"].FOOTER_SELECTOR).append(_Modal2["default"].BUTTON_NEXT),this},setAlert:function(alertMessage,alertType){Messages.setAlert(this.alertWrapper,alertMessage,alertType,void 0,!0)},removeAlert:function(){Messages.removeAlert(this.alertWrapper,!0)}}),module.exports=exports["default"]}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))}});