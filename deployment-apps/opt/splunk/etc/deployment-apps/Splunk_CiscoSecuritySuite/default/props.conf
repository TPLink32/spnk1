[cisco:esa:textmail]
FIELDALIAS-mid = internal_message_id AS mid
EXTRACT-policy-detail = matched (\d+|all) recipients for per-recipien(t|ts) policy (?<policy_name>\S+) in the (?<policy_direction>\S+) table
EXTRACT-case-detail = using engine: CASE spam (?<spam_verdict>\S+)
EXTRACT-vof-verdict = Outbreak Filters: verdict (?<vof_verdict>\S+)
EXTRACT-av-detail = antivirus (?<av_verdict>\w+)( \'(?<av_scan_result>\S+)\')?( \((?<av_unscannable_reason>\S+)\))?
EXTRACT-icid-detail1 = New (?<protocol>SMTP) ICID (?<icid>\d+) interface (?<dest_interface>.*) \((?<cs_ip>[0-9a-f\.\:]+)\) address (?<ss_ip>[0-9a-f\.\:]+)

EVAL-threat_reason = coalesce(case(spam_verdict="positive","spam",vof_verdict="positive","outbreak",av_verdict="positive","viral"),"clean")
#
# Props for Cisco Firewall.  Note that we rely on
# the Splunk_TA_cisco-asa, so only extra items from
# that TA are required
#
[cisco:asa]
EVAL-transport = lower(transport)
LOOKUP-service = networkservice "Transport Protocol" AS transport, "Port Number" AS dest_port OUTPUT "Service Name" AS service
LOOKUP-events = cisco-fw-eventcode log_level, message_id OUTPUT cause, threat_reason

[cisco:pix]
EVAL-transport = lower(transport)
LOOKUP-service = networkservice "Transport Protocol" AS transport, "Port Number" AS dest_port OUTPUT "Service Name" AS service
LOOKUP-events = cisco-fw-eventcode log_level, message_id OUTPUT cause, threat_reason

[cisco:fwsm]
EVAL-transport = lower(transport)
LOOKUP-service = networkservice "Transport Protocol" AS transport, "Port Number" AS dest_port OUTPUT "Service Name" AS service
LOOKUP-events = cisco-fw-eventcode log_level, message_id OUTPUT cause, threat_reason

# The following is for eventgen data
[source::...samplelog_css.cisco-wsa-squid]
sourcetype = cisco:wsa:squid

[cisco:wsa:squid]
REPORT-squid = cisco-wsa-squid-base, cisco-wsa-squid-extra, cisco-wsa-csurl, cisco-wsa-ntdomain, cisco-wsa-userid, cisco-wsa-fqdn, cisco-wsa-acltag, cisco-wsa-acldecision, cisco-wsa-scanverdict cisco-wsa-domainbits
LOOKUP-acldecision = cisco-wsa-acl-decision-tag acl_decision_tag OUTPUT action, cause, threat_reason
LOOKUP-transaction = cisco-wsa-transaction sc_result OUTPUT cache
LOOKUP-proxy_action = css_wsa_proxy_action_lookup vendor_action OUTPUT action AS proxy_action

# Constructs the destination domain depending on if it's an IPv4 or IPv6 address,
# 3-letter TLD (com/org/net/etc.) or 2-letter TLD (country-codes)
EVAL-dest_domain = case(isnotnull(x_cisco_wsa_urlhost_ipv4),x_cisco_wsa_urlhost_ipv4,isnotnull(x_cisco_wsa_urlhost_ipv6),x_cisco_wsa_urlhost_ipv6,isnotnull(x_cisco_wsa_urlhost_3tld),x_cisco_wsa_urlhost_3tld,isnotnull(x_cisco_wsa_urlhost_2tld),x_cisco_wsa_urlhost_2tld,isnull(x_cisco_wsa_urlhost_ipv4),dest_ip)

# X-ScanVerdict and X-ThreatName are two fields that determine if there is a web threat
EVAL-X-ScanVerdict = case(x_webroot_threat_name!="-",1,x_mcafee_virus_name!="-",1,x_sophos_virus_name!="-",1,isnotnull(sourcetype),0)
EVAL-X-ThreatName = case(x_webroot_threat_name!="-",x_webroot_threat_name,x_mcafee_virus_name!="-",x_mcafee_virus_name,x_sophos_virus_name!="-",x_sophos_virus_name)

# CIM-compliance fields
LOOKUP-vendor = cisco-wsa-vendor-info sourcetype OUTPUT app, ids_type, vendor, product
FIELDALIAS-srcip = c_ip as src_ip
FIELDALIAS-src = c_ip as src
FIELDALIAS-url = cs_url as url
FIELDALIAS-method = cs_method AS http_method
FIELDALIAS-content = cs_mime_type AS http_content_type
FIELDALIAS-dest = dest_ip AS dest
FIELDALIAS-status = sc_http_status AS status
FIELDALIAS-bytesin = sc_bytes AS bytes_in
FIELDALIAS-bytesout = cs_bytes AS bytes_out
FIELDALIAS-useragent = cs_user_agent AS http_user_agent
FIELDALIAS-desthost = s_from AS dest_host
EVAL-dest_port = case(isnotnull(cs_url_port),cs_url_port,cs_url_scheme=="http",80,cs_url_scheme=="https",443,isnull(cs_url_port),"-")
# Fix for bytes_in and bytes_out so that we don't get null errors
EVAL-bytes_out = if(isnull(bytes_out),0,bytes_out)
EVAL-bytes_in = if(isnull(bytes_in),0,bytes_in)
[source::eStreamer]
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)
TRUNCATE = 0
TIME_PREFIX = event_sec=
#
#### Aliases needed for Version 2.x ####
FIELDALIAS-estreamer_first_pkt_sec_1 = connection_second AS first_pkt_sec
FIELDALIAS-estreamer_first_pkt_sec_2 = connection_sec AS first_pkt_sec
FIELDALIAS-estreamer_connection_id = connection_counter AS connection_id
FIELDALIAS-estreamer_instance_id = connection_instance_id AS instance_id
#
#### Splunk CIM - Intrusion Detection Fields ####
FIELDALIAS-estreamer_dvc = sensor AS dvc
FIELDALIAS-estreamer_src = src_ip AS src
FIELDALIAS-estreamer_dest = dest_ip AS dest
# FIELDALIAS-estreamer_severity = priority AS severity
FIELDALIAS-estreamer_intrusion_signature = msg AS signature
FIELDALIAS-estreamer_category = class_desc AS category
#
#### Splunk CIM - Network Traffic Fields ####
FIELDALIAS-estreamer_app = app_proto AS app
FIELDALIAS-estreamer_src_interface = iface_ingress AS src_interface
FIELDALIAS-estreamer_dest_interface = iface_egress AS dest_interface
FIELDALIAS-estreamer_bytes_in = src_bytes AS bytes_in
FIELDALIAS-estreamer_bytes_out = dest_bytes AS bytes_out
FIELDALIAS-estreamer_packets_in = src_pkts AS packets_in
FIELDALIAS-estreamer_packets_out = dest_pkts AS packets_out
FIELDALIAS-estreamer_flow_id = connection_id AS flow_id
FIELDALIAS-estreamer_rule = fw_rule AS rule
#
#### Splunk CIM - Malware Fields ####
FIELDALIAS-estreamer_file_hash = sha256 AS file_hash
FIELDALIAS-estreamer_malware_signature = detection AS signature
#
#### Lookups ####
LOOKUP-estreamer_fw_action = fw_actions fw_rule_action OUTPUT action
LOOKUP-estreamer_sources = sources source OUTPUT vendor, product, ids_type
LOOKUP-estreamer_transport = ip_protos ip_proto OUTPUT transport
LOOKUP-estreamer_file_action = file_actions file_action OUTPUT action
LOOKUP-estreamer_severities = severities impact,priority OUTPUT severity
