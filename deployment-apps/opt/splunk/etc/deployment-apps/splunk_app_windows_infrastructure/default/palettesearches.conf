[postprocess333]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[PrintMonitoring.TopPrinters.Search]
search = eventtype=printmon_windows | stats count by printer | sort -count | head 10
use_timepicker = 1

[ActiveDirectory.GroupAuditRecentMembershipChanges.Search]
search = `group-changes-for-group("$ldaprecord.nt_domain$","$ldaprecord.groupName$")`
use_timepicker = 1

[HostMonitoringHost.Search]
search = | inputlookup windows_hostmon_system  | dedup Host | sort Host

[postprocess233]
search = dedup host|sort host
parent = searchmanager231

[Event.EventCountByHostOverTime.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | timechart span=1m count by host
use_timepicker = 1

[searchmanager141]
search = eventtype=msad-dns-events host="$select135$"|lookup EventCodes EventCode,LogName OUTPUTNEW desc|eval desc=if(isnull(desc),"Unknown EventCode",desc)|stats count by Type,EventCode,LogName,desc
use_timepicker = 1

[postprocess237]
search = search host="$select232$" object="$select234$"|dedup counter|sort counter
parent = searchmanager231

[postprocess235]
search = search host="$select232$"|dedup object|sort object
parent = searchmanager231

[postprocess431]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager72]
search = eventtype=msad-ad-access Object_Type=groupPolicyContainer src_nt_domain="$select73$" src_user="$select72$" |stats latest(_time) as _time by src_nt_domain,src_user,host,session_id,Object_Name_Guid|ldapfilter domain="$$src_nt_domain$$" search="(CN={$$Object_Name_Guid$$})" attrs="displayName"|search displayName="$select74$"|`session-to-host`|table _time,src_nt_domain,src_user,login_host,displayName|rename src_nt_domian as "Domain",src_user as "Administrator",login_host as "Workstation", displayName as "Group Policy Name"
use_timepicker = 1

[ApplicationCrashes.TotalCrashesByHost.Search]
search = search eventtype="wineventlog_windows" EventCode="1001" Event_Name="*" host="$EventHost$" | eval application=P1 | stats sparkline as Trend, count by host | sort -count
use_timepicker = 1

[postprocess436]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[postprocess89]
search = dedup adminuser|sort adminuser
parent = searchmanager87

[Event.EventCountByEventCodeOverTime.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | timechart span=1m count by EventCode
use_timepicker = 1

[ActiveDirectory.UserAuditFailedLogonActivity.Search]
search = `lockouts-for-user($ldaprecord.nt_domain$,$ldaprecord.user$)`|rename mintime as "Earliest",maxtime as "Latest",src as Workstation,src_ip as "IP Address", signature as "Reason"
use_timepicker = 1

[ServiceName.Search]
search = | inputlookup windows_hostmon_services_details | dedup Name | sort Name

[searchmanager272]
search = eventtype=msad-disabled-logons $multidropdown_host$|lookup SiteInfo host|stats count by user,dest_nt_domain,src_ip,Site|`ip-to-host`|`fix-localhost`|rename user as "Username",dest_nt_domain as "Domain",src_ip as "IP Address",src_host as "Workstation"
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[ActiveDirectory.LDAPRecordGroup.Search]
search = | ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=group)(cn=$ldaprecord.groupName$))"|fields *
use_timepicker = 1

[postprocess202]
search = search ForestName="$select_forestname$" Site="$select199$"|dedup DomainNetBIOSName|sort DomainNetBIOSName
parent = searchmanager198

[searchmanager474]
search = |`secrpt-all-groups($select472$)`

[searchmanager361]
search = |`secrpt-users-that-dont-require-password($select359$)`

[postprocess534]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[postprocess539]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager340]
search = |`secrpt-inactive-users($select338$)`
use_timepicker = 1

[FreeSpacePct.Search]
search = | inputlookup windows_hostmon_fs_details  | search FileSystem="$FileSystem$" DriveType="$DriveType$" | dedup FreeSpacePct | sort FreeSpacePct

[ApplicationInstalls.InstallationDetailsByHost.Search]
search = search eventtype="wineventlog_windows" SourceName=MsiInstaller EventCode=11707  host="$EventHost$" | rex field=Message "(?s)Product: (?<product_name>.*) --" | stats count, latest(_time) AS ltime by host, product_name | convert ctime(ltime) | eval comb=product_name." (Last Event Time = ".ltime." )" | stats values(comb) AS Installed_Products, sum(count) AS Total_Events by host
use_timepicker = 1

[NetworkProcessName.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" Protocol="$Protocol$" PacketType="$PacketType$" RemoteHostName="$RemoteHostName$" RemotePort="$RemotePort$" LocalPort="$LocalPort$" | dedup ProcessName | sort ProcessName

[searchmanager122]
search = eventtype=perfmon-ntds host="$select118$" `rep-health-perfmon-list`|stats sparkline(avg(Value),1m) as "Average", avg(Value) as "Average Value" by counter|sort counter|rename counter as "Performance Counter"
use_timepicker = 1

[postprocess377]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager283]
search = eventtype=msad-failed-user-logons $multidropdown_host$|fields _time,signature,src_ip,src_host,src_nt_host,src_nt_domain,user,Logon_Type
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[Event.Hosts.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | stats sparkline as "Trend", count by host | sort -count
use_timepicker = 1

[Performance.LogicalDisk.Search.Counter]
search = search object="LogicalDisk" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[site_postprocess]
search = search $multidropdown_forest$
parent = search_columnselector
bindingconf = {"multidropdown_forest": {"type": "or", "key": "ForestName"}}

[postprocess339]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[ActiveDirectory.DNSPerformance.Host.Search]
search = dedup host | sort host
parent = ActiveDirectory.DNSPerformance.InputBase

[ApplicationCrashes.CrashesOverTimeByHost.Search]
search = search eventtype="wineventlog_windows" EventCode="1001" Event_Name="*" host="$EventHost$" | timechart count by host useother=f
use_timepicker = 1

[Performance.MemoryMetrics.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="Memory" counter="$Counter$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[Type.Search]
search = search LogName="$LogName$" TaskCategory="$TaskCategory$" SourceName="$SourceName$" EventCode="$EventCode$" | dedup Type | sort Type
parent = Windows.EventDetails.Search

[searchmanager238]
search = eventtype=perfmon host="$select232$" object="$select234$" counter="$select236$"|fillnull value="Total" instance|timechart avg(Value) by instance
use_timepicker = 1

[searchmanager55]
search = eventtype=msad-computer-changes $multidropdown_host$ |eval computer=dest_nt_domain."\\".user|eval adminuser=src_nt_domain."\\".src_user|`msad-changed-attributes`|eval msad_action=lower(msad_action)|fields *
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[postprocess425]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[Direction.Search]
search = | inputlookup windows_netmon_details | dedup Direction | sort Direction

[searchmanager393]
search = |`secrpt-unused-users($select391$)`

[postprocess479]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[Performance.LogicalDisk.Search.Instance]
search = search object="LogicalDisk" | dedup instance | table instance | sort instance
parent = Windows.PerfmonDetails.Search

[UserName.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" Protocol="$Protocol$" PacketType="$PacketType$" RemoteHostName="$RemoteHostName$" RemotePort="$RemotePort$" LocalPort="$LocalPort$" ProcessName="$NetworkProcessName$" | dedup UserName | sort UserName

[Performance.CpuMetrics.Search.Instance]
search = search object="Processor" | dedup instance | table instance | sort instance
parent = Windows.PerfmonDetails.Search

[postprocess345]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager305]
search = (eventtype=msad-successful-user-logons OR eventtype=msad-failed-user-logons) dest_nt_domain!="NT AUTHORITY" $multidropdown_host$|fillnull value="255" Logon_Type|lookup LogonTypeName Logon_Type|eval user_subject=dest_nt_domain."\\".user|fields *
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[HostInformationBrowser.HostInformation.Search]
search = eventtype="hostmon_windows" (Type=Computer OR Type=OperatingSystem) | stats latest(OS) as OS, latest(Domain) as Domain, latest(Architecture) as Architecture by host | search $HostMonitoringMultiHost$ host="$HostMonitoringMultiHostWildcard$" OS="$OSVersion$" Domain="$Domain$" Architecture="$Architecture$"
bindingconf = {"HostMonitoringMultiHost": {"type": "or", "key": "host"}}

[searchmanager267]
search = eventtype=msad-successful-user-logons NOT (user="SYSTEM" OR user="LOCAL SERVICE" OR user="NETWORK SERVICE" OR src_nt_domain="-") $multidropdown_host$|lookup SiteInfo host|fields *
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[searchmanager502]
search = |`secrpt-nested-groups($select500$)`

[postprocess507]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[ApplicationCrashes.CrashesOverTimeByApplication.Search]
search = search eventtype="wineventlog_windows" EventCode="1001" Event_Name="*" host="$EventHost$" | eval application=P1." (version: ".P2.")" | timechart count by application useother=f
use_timepicker = 1

[LogName.Search]
search = | dedup LogName | sort LogName
parent = Windows.EventDetails.Search

[searchmanager148]
search = eventtype=msad-dns-events|lookup EventCodes EventCode,LogName OUTPUTNEW desc|eval desc=if(isnull(desc),"Unknown EventCode",desc)|stats count by host,Type,EventCode,LogName,desc
use_timepicker = 1

[searchmanager469]
search = `secrpt-new-group-policies($select467$)`
use_timepicker = 1

[ActiveDirectory.LDAPRecordOrganizationalUnit.Search]
search = |ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=organizationalUnit)(ou=$ldaprecord.ouobject$))"|rex field=gPLink max_match=10 "\[(?<gpoLink>[^\]]+)\]"|rename gpoLink as gPLink|fields *
use_timepicker = 1

[searchmanager155]
search = eventtype=msad-dns-zoneinfo Zone="$select152$"|dedup host|table host,A,AAAA,CNAME,HINFO,MX,NS,SOA,SRV,TXT,TotalRecords
use_timepicker = 1

[searchmanager373]
search = |`secrpt-users-password-too-old($select371$)`
use_timepicker = 1

[ApplicationInstalls.InstallsOverTimeByApplication.Search]
search = search eventtype="wineventlog_windows" SourceName=MsiInstaller EventCode=11707  host="$EventHost$" | rex field=Message "(?s)Product: (?<product_name>.*) --" | timechart count by product_name
use_timepicker = 1

[ActiveDirectory.LDAPRecordUser.Search]
search = |ldapsearch domain=$ldaprecord.nt_domain$ search="(sAMAccountName=$ldaprecord.user$)"|fields *
use_timepicker = 1

[ActiveDirectory.LDAPRecordGroupPolicy.Search]
search = |ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=groupPolicyContainer)(|(cn=$ldaprecord.gpobject$)(displayName=$ldaprecord.gpobject$)))"|fields *
use_timepicker = 1

[searchmanager463]
search = |`secrpt-disabled-group-policies($select461$)`

[searchmanager378]
search = |`secrpt-sensitive-users($select376$)`

[searchmanager540]
search = |`secrpt-unmanaged-orgunits($select538$)`

[Performance.PhysicalDisk.Search.Counter]
search = search object="PhysicalDisk" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[PerfmonHost.Search]
search = | inputlookup windows_perfmon_system | dedup Host | sort Host

[Architecture.Search]
search = | inputlookup windows_hostmon_machine_details | search OS="$OSVersion$" Domain="$Domain$" | dedup Architecture | sort Architecture

[postprocess75]
search = |dedup displayName|sort displayName
parent = searchmanager71

[postprocess73]
search = |dedup adminuser|sort adminuser
parent = searchmanager71

[WindowsUpdate.FailedWindowsUpdateByHost.Search]
search = search eventtype="Update_Failed" package=* host="$EventHost$"| dedup package, host | stats sparkline as Trend count by host | sort -count
use_timepicker = 1

[Performance.ProcessMetrics.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="Process" counter="$Counter$" instance="$Instance$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[Performance.NetworkMetrics.Search.Counter]
search = search object="Network Interface" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[Domain.Search]
search = | inputlookup windows_hostmon_machine_details | search OS="$OSVersion$" | dedup Domain | sort Domain

[postprocess97]
search = dedup MSADGroupType|sort MSADGroupType
parent = searchmanager87

[searchmanager497]
search = |`secrpt-large-groups($select494$,$textbox496$)`

[searchmanager491]
search = |`secrpt-empty-groups($select489$)`

[searchmanager486]
search = `secrpt-deleted-groups($select484$)`
use_timepicker = 1

[postprocess91]
search = dedup user_group|sort user_group
parent = searchmanager87

[WindowsUpdate.SuccessfulWindowsUpdateByKbNumber.Search]
search = search eventtype="Update_Successful" package=* host="$EventHost$"| dedup package, host | stats sparkline as Trend count by package_title| sort -count
use_timepicker = 1

[EventHost.Search]
search = | inputlookup windows_event_system | dedup Host | sort Host

[searchmanager312]
search = eventtype=msad-account-lockout $multidropdown_host$|fillnull value="UNKNOWN" src_host|eval lockout=if(EventCode==644 OR EventCode==4740,"Yes","No")|stats latest(_time) as time,latest(src_host) as host,latest(lockout) as lockedout by dest_nt_domain,user|search lockedout="Yes"|eval ltime=strftime(time,"%c")|table ltime,dest_nt_domain,user,host|rename ltime as "Lockout Time",dest_nt_domain as "Domain",user as "Account Locked Out", host as "Workstation"
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[postprocess160]
search = dedup DomainNetBIOSName|sort DomainNetBIOSName
parent = searchmanager158

[postprocess167]
search = table host,Site,Enabled|sort host|rename host as "Server"
parent = searchmanager161

[ActiveDirectory.DNSPerformance.Counter.Search]
search = search host="$ActiveDirectory.DNSPerformance.Host$" | dedup counter | sort counter
parent = ActiveDirectory.DNSPerformance.InputBase

[postprocess165]
search = stats count by Site|table Site
parent = searchmanager161

[searchmanager151]
search = eventtype=msad-dns-zoneinfo|stats count by Zone|table Zone|sort Zone
use_timepicker = 1

[postprocess512]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager153]
search = eventtype=msad-dns-zoneinfo Zone="$select152$"|tail 1|table Zone,Aging,AllowUpdate,AutoCreated,AvailForScavengeTime,Caption,DsIntegrated,ForwarderSlave,ForwarderTimeout,NoRefreshInterval,RefreshInterval,Paused,Reverse,Shutdown,Status|transpose
use_timepicker = 1

[searchmanager318]
search = `secrpt-active-users($select316$)`
use_timepicker = 1

[postprocess517]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[postprocess292]
search = lookup LogonTypeName Logon_Type OUTPUTNEW Logon_TypeName|stats count by Logon_TypeName
parent = searchmanager283

[Performance.SystemMetrics.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="System" counter="$Counter$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[ActiveDirectory.ComputerAuditGroupMembership.Search]
search = |ldapsearch domain=$ldaprecord.nt_domain$ search="(objectclass=group)" attrs="cn,description,primaryGroupToken"|eval joiner=mvappend(dn,primaryGroupToken)|rename dn as groupDN,cn as groupName,primaryGroupToken as primaryGroupID|table groupDN,groupName,primaryGroupID,joiner|mvexpand joiner|join type=inner joiner [ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=computer)(|(cn=$ldaprecord.computer$)(sAMAccountName=$ldaprecord.computer$)))" attrs="memberOf,primaryGroupID"|eval joiner=mvappend(memberOf,primaryGroupID)|table joiner|mvexpand joiner]|dedup groupDN|table groupDN,groupName,primaryGroupID|sort primaryGroupID
use_timepicker = 1

[ActiveDirectory.ComputerAuditFailedLogonActivity.Search]
search = eventtype=msad-failed-computer-logons|rename User_ID as userSid|join type=inner userSid [ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=computer)(|(cn=$ldaprecord.computer$)(sAMAccountName=$ldaprecord.computer$)))" attrs="objectSid"|eval userSid="%{"+objectSid+"}"|fields userSid]|stats min(_time) as mintime,max(_time) as maxtime,count by src_ip,signature|`ip-to-host`|`fix-localhost`|eval mintime=strftime(mintime,"%F %T")|eval maxtime=strftime(maxtime,"%F %T")|rename mintime as "Earliest",maxtime as "Latest",src_host as Workstation,src_ip as "IP Address", signature as "Reason"
use_timepicker = 1

[searchmanager415]
search = `secrpt-deleted-computers($select413$)`
use_timepicker = 1

[searchmanager383]
search = |`secrpt-users-no-smartcard-required($select381$)`

[Performance.MemoryMetrics.Search.Counter]
search = search object="Memory" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[NetworkMonitoring.OutboundProcesses.Search]
search = eventtype=netmon_windows host="$NetworkHost$" Direction=outbound earliest=-60m | top limit=10 ProcessName
use_timepicker = 1

[Search.AdDomains.Timepicker]
search = |`ad-domains`
use_timepicker = 1

[postprocess441]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[NetworkMonitoring.InboundProcesses.Search]
search = eventtype=netmon_windows host="$NetworkHost$" Direction=inbound earliest=-60m | top limit=10 ProcessName
use_timepicker = 1

[domaindns_postprocess]
search = search $multidropdown_forest$ $multidropdown_site$
parent = search_columnselector
bindingconf = {"multidropdown_site": {"type": "or", "key": "Site"}, "multidropdown_forest": {"type": "or", "key": "ForestName"}}

[OSVersion.Search]
search = | inputlookup windows_hostmon_machine_details  | dedup OS | sort OS

[RemotePort.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" Protocol="$Protocol$" PacketType="$PacketType$" RemoteHostName="$RemoteHostName$" | dedup RemotePort | sort RemotePort

[postprocess60]
search = search computer=$select58|s$ adminuser=$select56|s$|table _time,adminuser,msad_action,computer,MSADChanges|rename adminuser as "Administrator",msad_action as "Action", computer as "Computer Name", MSADChanges as "Changes"
parent = searchmanager55

[postprocess457]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[PrintMonitoring.PrintMonitoringJobBrowser.Search]
search = eventtype=printmon_windows host="$PrintMonitoring.Host$" printer="$PrintMonitoring.Printer$" document="$PrintMonitoring.Document$" user="$PrintMonitoring.User$" | table host, printer, status, total_pages, document, user, submitted_time, size_bytes
use_timepicker = 1

[postprocess200]
search = search ForestName="$select_forestname$"|dedup Site|sort Site
parent = searchmanager198

[postprocess207]
search = table host,DCWeight|dedup host|sort -host|rename host as "Domain Controller", DCWeight as "Weight"
parent = searchmanager203

[postprocess205]
search = table DomainDNSName,DomainNetBIOSName|dedup DomainDNSName|sort -DomainDNSName|rename DomainDNSName as "Domain Name", DomainNetBIOSName as "NetBIOS Name"
parent = searchmanager203

[searchmanager480]
search = `secrpt-changed-groups($select478$)`
use_timepicker = 1

[TaskCategory.Search]
search = search LogName="$LogName$" SourceName="$SourceName$" | dedup TaskCategory | sort TaskCategory
parent = Windows.EventDetails.Search

[ServiceState.Search]
search = | inputlookup windows_hostmon_services_details | search Name="$MultiServiceName$" StartMode="$StartMode$" | dedup State | sort State

[WindowsUpdate.SuccessfulWindowsUpdateOverTimeByKbNumber.Search]
search = search eventtype="Update_Successful" package=* host="$EventHost$"| dedup package, host | timechart count by package useother=f
use_timepicker = 1

[Performance.PhysicalDisk.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="PhysicalDisk" counter="$Counter$" instance="$Instance$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[searchmanager426]
search = |`secrpt-inactive-computers($select424$)`
use_timepicker = 1

[postprocess446]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[Event.EventCountsByTypeOverTime.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | timechart span=1m count by Type
use_timepicker = 1

[searchmanager139]
search = eventtype=perfmon-dns host="$select135$" `dns-recursion-perfmon-list`|stats sparkline(avg(Value),1m) as "Average", avg(Value) as "Average Value" by counter|sort counter|rename counter as "Performance Counter"
use_timepicker = 1

[postprocess288]
search = |stats count by signature
parent = searchmanager283

[NetworkHost.Search]
search = | inputlookup windows_netmon_system | dedup Host | sort Host

[searchmanager323]
search = |`secrpt-all-users($select321$)`

[postprocess366]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[postprocess74]
search = |dedup src_nt_domain|sort src_nt_domain
parent = searchmanager71

[searchmanager124]
search = eventtype=msad-anomalous-events host="$select118$"|lookup EventCodes EventCode,LogName OUTPUTNEW desc|eval desc=if(isnull(desc),"Unknown EventCode",desc)|stats count by Type,EventCode,LogName,desc
use_timepicker = 1

[searchmanager241]
search = eventtype=msad-admin-audit NOT src_nt_domain="NT AUTHORITY"|stats count by src_user,src_nt_domain
use_timepicker = 1

[HostInformationBrowser.PeakMemoryUtilization.Search]
search = eventtype=perfmon_windows earliest_time=-1d object=Memory counter="% Committed Bytes In Use" host="$HostMonitoringHost$" | sort FreePhysicalMemoryKB | dedup host | eval PeakMemoryUsage=round((TotalPhysicalMemoryKB - FreePhysicalMemoryKB)/TotalPhysicalMemoryKB * 100) | where PeakMemoryUsage>50 | rangemap field=PeakMemoryUsage "50 - 60%"=50-59 "60 - 80%"=60-79  "> 80%"=80-100 | chart count(host), list(host) by range

[searchmanager120]
search = eventtype=perfmon-ntds host="$select118$" `dc-health-perfmon-list`|stats sparkline(avg(Value),1m) as "Average", avg(Value) as "Average Value" by counter|sort counter|rename counter as "Performance Counter"
use_timepicker = 1

[postprocess286]
search = |`ip-to-host`|`fix-localhost`|stats count by src_nt_host,src_ip|sort -count|rename src_nt_host as "Workstation",src_ip as "IP Address"
parent = searchmanager283

[HostInformationBrowser.DiskFreeSpaceDistribution.Search]
search = eventtype=hostmon_windows Type=Disk FreeSpaceKB=* TotalSpaceKB=* host="$HostMonitoringHost$" | dedup Name, host | stats sum(TotalSpaceKB) as TotalSpace, sum(FreeSpaceKB) as FreeSpace by host | eval FreeSpacePct=round(FreeSpace/TotalSpace*100) | rangemap field=FreeSpacePct "<20%"=0-19 "20 - 50%"=20-49 ">50%"=50-100 | chart count(host), list(host) by range

[postprocess284]
search = |timechart count by signature
parent = searchmanager283

[searchmanager252]
search = eventtype=msad-groupmembership-changes src_nt_domain="$select242$" src_user="$select244$"|table _time,msad_action,dest_nt_domain,user_group,member_id|rename msad_action as "Action",dest_nt_domain as "Domain", user_group as "Group",member_id as "Member"
use_timepicker = 1

[postprocess360]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager399]
search = `secrpt-active-computers($select397$)`
use_timepicker = 1

[Performance.ProcessMetrics.Search.Counter]
search = search object="Process" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[searchmanager256]
search = eventtype=msad-computer-changes src_nt_domain="$select242$" src_user="$select244$"|eval dest_host=dest_nt_domain."\\".user|`msad-changed-attributes`|table _time,action,dest_host,MSADChanges|rename action as Action,dest_host as "Workstation", MSADChanges as "Changes"
use_timepicker = 1

[DriveType.Search]
search = | inputlookup windows_hostmon_fs_details  | search FileSystem="$FileSystem$" | dedup DriveType | sort DriveType

[NetworkMonitoring.NetworkInformation.Search]
search = eventtype=netmon_windows host="$NetworkHost$" Direction="$Direction$" Protocol="$Protocol$" PacketType="$PacketType$" RemoteHostName="$RemoteHostName$" RemotePort="$RemotePort$" ProcessName="$NetworkProcessName$" UserName="$UserName$" | table host, Direction, PacketType, Protocol, RemoteHostName, LocalPort, RemotePort, ProcessName, UserName 
use_timepicker = 1

[ApplicationInstalls.TotalInstallsByApplication.Search]
search = search eventtype="wineventlog_windows" SourceName=MsiInstaller EventCode=11707  host="$EventHost$" | rex field=Message "(?s)Product: (?<product_name>.*) --" | stats sparkline as "Trend", count by product_name | sort -count
use_timepicker = 1

[Performance.ProcessMetrics.Search.Instance]
search = search object="Process" | dedup instance | table instance | sort instance
parent = Windows.PerfmonDetails.Search

[searchmanager404]
search = |`secrpt-all-computers($select402$)`

[postprocess95]
search = dedup MSADGroupClass|sort MSADGroupClass
parent = searchmanager87

[postprocess59]
search = dedup computer|sort computer
parent = searchmanager55

[Performance.CpuMetrics.Search.Counter]
search = search object="Processor" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[postprocess501]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[Search.AdDomains.NoTimepicker]
search = |`ad-domains`

[Performance.NetworkMetrics.Search.Instance]
search = search object="Network Interface" | dedup instance | table instance | sort instance
parent = Windows.PerfmonDetails.Search

[postprocess57]
search = dedup adminuser|sort adminuser
parent = searchmanager55

[ActiveDirectory.MSADTopologyReport.Search]
search = eventtype=msad-dc-health $multidropdown_forest$ $multidropdown_site$ $multidropdown_domaindnsname$ $multidropdown_host$|eval DomainNetBIOSName=upper(DomainNetBIOSName)|eval DomainDNSName=lower(DomainDNSName)|dedup host,DomainDNSName|sort ForestName,Site,DomainDNSName,host|eval DomainTitle="Forest: ".ForestName." (".ForestLevel."), Domain: ".DomainNetBIOSName."\\".DomainDNSName." (".DomainLevel.")"|fields host, Enabled, Site, OperatingSystem, OSVersion, FSMORoles, GlobalCatalog, RODC, ProcsOK, DNSRegister, SYSVOLShare
use_timepicker = 1
bindingconf = {"multidropdown_site": {"type": "or", "key": "Site"}, "multidropdown_domaindnsname": {"type": "or", "key": "DomainDNSName"}, "multidropdown_forest": {"type": "or", "key": "ForestName"}, "multidropdown_host": {"type": "or", "key": "host"}}

[ActiveDirectory.LDAPRecordComputer.Search]
search = | ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=computer)(|(cn=$ldaprecord.computer$)(sAMAccountName=$ldaprecord.computer$)))"|fields *
use_timepicker = 1

[Event.EventCountsByLogNameOverTime.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | timechart span=1m count by LogName
use_timepicker = 1

[postprocess403]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[postprocess473]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[TotalSpaceGB.Search]
search = | inputlookup windows_hostmon_fs_details  | search FileSystem="$FileSystem$" DriveType="$DriveType$" FreeSpacePct="$FreeSpacePct$" | dedup TotalSpaceGB | sort TotalSpaceGB

[PrintMonitoring.Host.Search]
search = | inputlookup windows_printmon | dedup Host | sort Host

[WindowsUpdate.FailedWindowsUpdateOverTimeByKbNumber.Search]
search = search eventtype="Update_Failed" package=* host="$EventHost$"| dedup package, host | timechart count by package
use_timepicker = 1

[postprocess372]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager248]
search = eventtype=msad-account-lockout msad_action="Unlocked" src_nt_domain="$select242$" src_user="$select244$"|where isnotnull(user)|table _time,msad_action,user,dest_nt_domain|rename msad_action as "Action",user as "Username",dest_nt_domain as "Domain"
use_timepicker = 1

[ActiveDirectory.ComputerAuditIpAddressHistory.Search]
search = eventtype=msad-successful-computer-logons user="$ldaprecord.computer$$$" dest_nt_domain="$ldaprecord.nt_domain$"|table _time,host,src_ip|dedup consecutive=T src_ip|lookup SiteInfo host|table _time,src_ip,Site
use_timepicker = 1

[searchmanager231]
search = eventtype=perfmon|stats count by host,object,counter
use_timepicker = 1

[Performance.SystemMetrics.Search.Counter]
search = search object="System" | dedup counter | table counter | sort counter
parent = Windows.PerfmonDetails.Search

[searchmanager137]
search = eventtype=perfmon-dns host="$select135$" `dns-query-perfmon-list`|stats sparkline(avg(Value),1m) as "Average", avg(Value) as "Average Value" by counter|sort counter|rename counter as "Performance Counter"
use_timepicker = 1

[StartMode.Search]
search = | inputlookup windows_hostmon_services_details | search Name="$MultiServiceName$" | dedup StartMode | sort StartMode

[searchmanager134]
search = eventtype=msad-dns-health|stats count by host|table host|sort host
use_timepicker = 1

[searchmanager334]
search = |`secrpt-disabled-users($select332$)`

[searchmanager442]
search = |`secrpt-trusted-computers($select440$)`

[Event.SourceNames.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | stats sparkline as "Trend", count by SourceName | sort -count
use_timepicker = 1

[searchmanager178]
search = eventtype=msad-dc-health $multidropdown_forest$ $multidropdown_site$ $multidropdown_domaindnsname$ $multidropdown_host$|eval ok=if(ProcsOK=="False" OR DNSRegister=="False" OR SYSVOLShare=="False",0,1)|streamstats sum(ok) as trx_id by host|where ok=0|stats first(_time) as end, last(_time) as start,       min(ProcsOK) as ProcsOK, min(DNSRegister) as DNSRegister, min(SYSVOLShare) as SYSVOLShare by trx_id, host|eval duration=round(end-start)|eval "Start Time"=strftime(start,"%c")|eval "Duration (Approx)"=tostring(duration,"duration") + " - " + tostring(duration + 5*60,"duration")|rename host as "Host", ProcsOK as "Services", DNSRegister as "DNS Registration", SYSVOLShare as "SYSVOL Shared"|table "Start Time", "Duration (Approx)", "Host", "Services", "DNS Registration", "SYSVOL Shared"
use_timepicker = 1
bindingconf = {"multidropdown_site": {"type": "or", "key": "Site"}, "multidropdown_domaindnsname": {"type": "or", "key": "DomainDNSName"}, "multidropdown_forest": {"type": "or", "key": "ForestName"}, "multidropdown_host": {"type": "or", "key": "host"}}

[searchmanager254]
search = eventtype=msad-ad-access src_nt_domain="$select242$" src_user="$select244$" Object_Type="groupPolicyContainer"|eval srch="CN={" . Object_Name_Guid . "}"|transaction maxspan=5m session_id,host,srch|`session-to-host`|table _time,login_host,srch,src_nt_domain|ldapfilter domain="$select242$" search="($$srch$$)" attrs=displayName|table _time,login_host,displayName|rename login_host as "Workstation",displayName as "Group Policy"
use_timepicker = 1

[PrintMonitoring.PrintMonitoringInformation.Search]
search = eventtype=printmon_windows host="$PrintMonitoring.Host$" printer="$PrintMonitoring.Printer$" operation="$PrintMonitoring.Operation$" | table host, printer, status, operation, driver, print_processor, priority, port

[PrintMonitoring.Operation.Search]
search = | inputlookup windows_printmon | search Host="$PrintMonitoring.Host$" printer="$PrintMonitoring.Printer$" | dedup operation | sort operation

[Protocol.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" | dedup Protocol | sort Protocol

[searchmanager535]
search = `secrpt-new-orgunits($select533$)`
use_timepicker = 1

[host_postprocess]
search = search $multidropdown_forest$ $multidropdown_site$ $multidropdown_domaindnsname$
parent = search_columnselector
bindingconf = {"multidropdown_site": {"type": "or", "key": "Site"}, "multidropdown_domaindnsname": {"type": "or", "key": "DomainDNSName"}, "multidropdown_forest": {"type": "or", "key": "ForestName"}}

[ActiveDirectory.UserAuditGroupMembership.Search]
search = |ldapsearch domain=$ldaprecord.nt_domain$ search="(objectclass=group)" attrs="cn,description,primaryGroupToken"|eval joiner=mvappend(dn,primaryGroupToken)|rename dn as groupDN,cn as groupName,primaryGroupToken as primaryGroupID|table groupDN,groupName,primaryGroupID,joiner|mvexpand joiner|join type=inner joiner [ldapsearch domain=$ldaprecord.nt_domain$ search="(sAMAccountName=$ldaprecord.user$)" attrs="memberOf,primaryGroupID"|eval joiner=mvappend(memberOf,primaryGroupID)|table joiner|mvexpand joiner]|dedup groupDN|table groupDN,groupName,primaryGroupID|sort primaryGroupID
use_timepicker = 1

[ActiveDirectory.MSADServerStatusInfo.Search]
search = eventtype=msad-dc-health host="$select118$" |head 1|lookup SchemaVersionName SchemaVersion|fields *
use_timepicker = 1

[searchmanager432]
search = `secrpt-new-computers($select430$)`
use_timepicker = 1

[ActiveDirectory.GroupPolicyAuditLinkedContainers.Search]
search = |ldapsearch domain=$ldaprecord.nt_domain$ search="(&(objectclass=groupPolicyContainer)(|(cn=$ldaprecord.gpobject$)(displayName=$ldaprecord.gpobject$)))" attrs="displayName,cn,versionNumber"|join type=outer cn [ldapsearch domain=$ldaprecord.nt_domain$ search="(gPLink=*)" attrs="distinguishedName,gPLink"|where isnotnull(gPLink)|rex field=gPLink max_match=10 "\\[LDAP://(CN|cn)=(?<cn>[^,]+),"|table cn,distinguishedName|mvexpand cn|mvcombine distinguishedName|eval lc=mvjoin(distinguishedName,"###")|fields cn,lc]|eval linkedContainers=split(lc,"###")|table linkedContainers|mvexpand linkedContainers|rename linkedContainers as "Linked Containers"
use_timepicker = 1

[WindowsUpdate.FailedWindowsUpdateByKbNumber.Search]
search = search eventtype="Update_Failed" package=* host="$EventHost$"| dedup package, host | stats sparkline as Trend count by package_title| sort -count
use_timepicker = 1

[NetworkMonitoring.OutboundHosts.Search]
search = eventtype=netmon_windows host="$NetworkHost$" Direction=outbound earliest=-60m | top limit=10 RemoteHostName
use_timepicker = 1

[searchmanager329]
search = `secrpt-deleted-users($select327$)`
use_timepicker = 1

[ActiveDirectory.UserAuditAccountLockoutActivity.Search]
search = eventtype=msad-account-lockout user="$ldaprecord.user$" dest_nt_domain="$ldaprecord.nt_domain$"|dedup consecutive=T EventCode|eval adminuser=src_nt_domain."\\".src_user|eval actor=if(EventCode==4767 OR EventCode==671,adminuser,src_host)|table _time,signature,actor|rename signature as "Action",src_host as "Workstation",actor as "Actor"
use_timepicker = 1

[NetworkMonitoring.InboundHosts.Search]
search = eventtype=netmon_windows host="$NetworkHost$" Direction=inbound earliest=-60m | top limit=10 RemoteHostName
use_timepicker = 1

[searchmanager437]
search = |`secrpt-unmanaged-computers($select435$)`

[PrintMonitoring.TopUsersPrinting.Search]
search = eventtype=printmon_windows | stats count by user | sort -count | head 10
use_timepicker = 1

[postprocess462]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[HostInformationBrowser.Processes.Search]
search = eventtype=hostmon_windows Type=Process host="$HostMonitoringHost$" Name="$HostProcessName$" | dedup host, Name | table host, Name, StartTime, CommandLine

[postprocess523]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager98]
search = eventtype=msad-group-changes $multidropdown_host$ user_group="$select90$" MSADGroupType="$select96$" MSADGroupClass="$select94$"|eval adminuser=src_nt_domain."\\".src_user|search adminuser=$select88|s$|table _time,adminuser,msad_action,MSADGroupClass,MSADGroupType,src_nt_domain,user_group|rename adminuser as "Administrator",msad_action as "Action",user_group as "Group", MSADGroupClass as "Type", MSADGroupType as "Scope",src_nt_domian as "Domain"
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[postprocess468]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[postprocess306]
search = |eval x=1|timechart per_minute(x) by Logon_TypeName
parent = searchmanager305

[searchmanager250]
search = eventtype=msad-user-changes src_nt_domain="$select242$" src_user="$select244$"|where isnotnull(user)|`msad-changed-attributes`|table _time,msad_action,user,dest_nt_domain,MSADChanges|rename msad_action as "Action",user as "Username",dest_nt_domain as "Domain",MSADChanges as "Changes"
use_timepicker = 1

[SourceName.Search]
search = search LogName="$LogName$" | dedup SourceName | sort SourceName
parent = Windows.EventDetails.Search

[searchmanager351]
search = |`secrpt-users-that-dont-expire($select349$)`

[searchmanager524]
search = `secrpt-deleted-orgunits($select522$)`
use_timepicker = 1

[searchmanager346]
search = `secrpt-new-users($select344$)`
use_timepicker = 1

[WindowsUpdate.SuccessfulWindowsUpdateOverTimeByHost.Search]
search = search eventtype="Update_Successful" package=* host="$EventHost$"| dedup package, host | timechart count by host useother=f
use_timepicker = 1

[postprocess268]
search = stats dc(Site) as sitecount,values(Site) as Sites by user,src_nt_domain|where sitecount>1|sort user,src_nt_domain|table user,src_nt_domain,Sites|rename user as "Username",src_nt_domain as "Domain"
parent = searchmanager267

[postprocess382]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[postprocess355]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[Performance.CpuMetrics.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="Processor" counter="$Counter$" instance="$Instance$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[postprocess387]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager158]
search = |inputlookup DomainSelector|stats count by DomainNetBIOSName
use_timepicker = 1

[searchmanager146]
search = eventtype=msad-dns-zoneinfo|eval Breakdown="A:".A.", AAAA:".AAAA.", CNAME:".CNAME.", HINFO:".HINFO.", MX:".MX.", NS:".NS.", SOA:".SOA.", SRV:".SRV.", TXT:".TXT|dedup host,Zone|stats values(host) as "DNS Servers",values(TotalRecords) as "Total Records",values(Breakdown) as Breakdown by Zone
use_timepicker = 1

[searchmanager112]
search = eventtype=msad-user-changes $multidropdown_host$ user="$textbox111$"|eval adminuser=src_nt_domain."\\".src_user|eval dest_user_subject=dest_nt_domain."\\".user|`msad-changed-attributes`|`session-to-host`|`ip-to-host`|`fix-localhost`|table _time,src_ip,src_host,adminuser,msad_action,dest_user_subject,MSADChanges|rename src_ip as "Admin IP",src_host as "Workstation",adminuser as "Administrator",msad_action as "Action",dest_user_subject as "Target User",MSADChanges as "Changes"
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[HostInformationBrowser.DiskInformation.Search]
search = eventtype=hostmon_windows Type=Disk host="$HostMonitoringHost$" FileSystem="$FileSystem$" DriveType="$DriveType$" | dedup host, Name | eval FreeSpacePct=round(FreeSpaceKB/TotalSpaceKB*100) | eval TotalSpaceGB=round(TotalSpaceKB/1024/1024) | eval FreeSpaceGB=round(FreeSpaceKB/1024/1024) | search FreeSpacePct="$FreeSpacePct$" TotalSpaceGB="$TotalSpaceGB$" | dedup host, Name, DriveType, TotalSpaceGB, FreeSpaceGB, FreeSpacePct | table host, Name, DriveType, TotalSpaceGB, FreeSpaceGB, FreeSpacePct

[searchmanager508]
search = `secrpt-new-groups($select506$)`
use_timepicker = 1

[postprocess485]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager215]
search = eventtype=msad-successful-computer-logons|stats count by host|join type=inner host [search eventtype=msad-dc-health ForestName="$select_forestname$" Site="$select199$" DomainNetBIOSName="$select201$"|dedup host|fields host]|table host,count|rename count as "Computer Logons"|sort host
use_timepicker = 1

[searchmanager420]
search = |`secrpt-disabled-computers($select418$)`

[searchmanager529]
search = |`secrpt-gpolinked-orgunits($select527$)`

[postprocess243]
search = |dedup src_nt_domain|sort src_nt_domain
parent = searchmanager241

[ActiveDirectory.DNSServerStatusInfo.Search]
search = eventtype=msad-dns-health | search source=Powershell host="$select135$"|tail 1|fields *
use_timepicker = 1

[postprocess350]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[postprocess290]
search = `ip-to-host`|stats count by user,src_nt_domain|sort -count|rename user as "Username", src_nt_domain as "Domain"
parent = searchmanager283

[PacketType.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" Protocol="$Protocol$" | dedup PacketType | sort PacketType

[postprocess310]
search = search eventtype=msad-successful-user-logons|top src_nt_host|rename src_nt_host as Workstation
parent = searchmanager305

[postprocess308]
search = search eventtype=msad-successful-user-logons|top user,dest_nt_domain|rename user as "Username",dest_nt_domain as "Domain"
parent = searchmanager305

[postprocess317]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[FileSystem.Search]
search = | inputlookup windows_hostmon_fs_details  | dedup FileSystem | sort FileSystem

[postprocess294]
search = `ip-to-host`|`fix-localhost`|stats count by user,src_nt_domain,src_host,src_nt_host|stats count as nips by user,src_nt_domain|where nips>1|sort -nips|rename nips as "# Workstations", user as Username, src_nt_domain as "Domain"
parent = searchmanager283

[postprocess414]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[Event.EventIds.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | eval EventCodeDescription=if(isnull(EventCodeDescription), mvindex(split(Message, "."), 0), EventCodeDescription) | stats sparkline as "Trend", count by EventCode, EventCodeDescription | sort -count
use_timepicker = 1

[HostProcessName.Search]
search = | inputlookup windows_hostmon_process_details | dedup Name | sort Name

[searchmanager213]
search = eventtype=msad-dc-health ForestName="$select_forestname$" Site="$select199$" DomainNetBIOSName="$select201$"|stats avg(DCWeight) by host|sort host
use_timepicker = 1

[searchmanager211]
search = eventtype=msad-sitelinkinfo ForestName="$select_forestname$" Site="$select199$"|dedup Name|eval ReplicationInterval=tostring(ReplicationIntervalSecs,"duration")|table Name,TransportType,Cost,ReplicationInterval,Site|rename Name as "Site Link", TransportType as "Type", ReplicationInterval as "Replication Interval", Site as "Contained Sites"
use_timepicker = 1

[ldaprecord.nt_domain.search]
search = | inputlookup DomainSelector | eval nt_domain=DomainDNSName | dedup nt_domain | table nt_domain
use_timepicker = 1

[searchmanager356]
search = |`secrpt-users-with-no-manager($select354$)`

[PrintMonitoring.User.Search]
search = | inputlookup windows_printmon | search Host="$PrintMonitoring.Host$" printer="$PrintMonitoring.Printer$" | dedup user | sort user

[searchmanager218]
search = eventtype=msad-subnet-affinity|stats count by host,src_domain,src_host,src_ip|sort -count|table host,src_domain,src_host,src_ip|rename host as "Reporting Host", src_domain as "Reporting Domain", src_host as "Problem Host", src_ip as "Problem IP"
use_timepicker = 1

[postprocess419]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager518]
search = |`secrpt-all-orgunits($select516$)`

[searchmanager100]
search = eventtype=msad-groupmembership-changes $multidropdown_host$ user_group="$select90$" MSADGroupType="$select96$" MSADGroupClass="$select94$" member_id="$select92$"|eval adminuser=src_nt_domain."\\".src_user|search adminuser=$select88|s$|table _time,adminuser,MSADGroupClass,MSADGroupType,src_nt_domain,user_group,msad_action,member_id|rename adminuser as "Administrator",MSADGroupClass as "Type",MSADGroupType as "Scope",src_nt_domain as "Domain",user_group as "Group",msad_action as "Action",member_id as "Member"
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[postprocess392]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[Performance.NetworkMetrics.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="Network Interface" counter="$Counter$" instance="$Instance$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[search_columnselector]
search = |`domain-selector`
use_timepicker = 1

[searchmanager458]
search = `secrpt-deleted-group-policies($select456$)`
use_timepicker = 1

[postprocess398]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager513]
search = |`secrpt-unmanaged-groups($select511$)`

[postprocess495]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[postprocess490]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[Windows.PerfmonDetails.Search]
search = | inputlookup windows_perfmon_details

[ActiveDirectory.GroupPolicyAuditChanges.Search]
search = `audit-gpo-changes($ldaprecord.nt_domain$)`|search (displayName="$ldaprecord.gpobject$" OR cn="$ldaprecord.gpobject$")|`session-to-host`|table _time,adminuser,login_host|rename adminuser as "Administrator",login_host as "Workstation"
use_timepicker = 1

[postprocess26]
search = |ldapgroup|`split-ldapgroup`|table member_name,member_domain,member_type|sort member_name|rename member_name as "Username",member_domain as "Domain",member_type as "Membership Type"
parent = ActiveDirectory.LDAPRecordGroup.Search

[WindowsUpdate.FailedWindowsUpdateOverTimeByHost.Search]
search = search eventtype="Update_Failed" package=* host="$EventHost$"| dedup package, host | timechart count by host useother=f
use_timepicker = 1

[HostInformationBrowser.Services.Search]
search = eventtype=hostmon_windows Type=Service host="$HostMonitoringHost$" $MultiServiceName$ StartMode="$StartMode$" State="$ServiceState$" | dedup host, Name | table host, Name, StartMode, State
bindingconf = {"MultiServiceName": {"type": "or", "key": "Name"}}

[ApplicationInstalls.TotalInstallsByHost.Search]
search = search eventtype="wineventlog_windows" SourceName=MsiInstaller EventCode=11707 host="$EventHost$"| stats sparkline as "Trend", count by host | sort -count
use_timepicker = 1

[searchmanager180]
search = eventtype=msad-anomalous-events $multidropdown_host$|lookup EventCodes EventCode,LogName OUTPUTNEW desc|eval desc=if(isnull(desc),"Unknown EventCode",desc)|stats count by host,Type,EventCode,LogName,desc
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[ApplicationCrashes.CrashDetailsByHost.Search]
search = search eventtype="wineventlog_windows" EventCode="1001" Event_Name="*" host="$EventHost$" | eval application=P1." (version: ".P2.")" | stats latest(_time) as ltime, count by host, application | convert ctime(ltime) | eval comb=application." (Total App Events = ".count." )(Last Crash Time = ".ltime." )" | stats values(comb) AS Applications, sum(count) AS Total_Events by host | sort -Total_Events
use_timepicker = 1

[ApplicationCrashes.TotalCrashesByApplication.Search]
search = search eventtype="wineventlog_windows" EventCode="1001" Event_Name="*" host="$EventHost$" | eval application=P1." (version: ".P2.")" | stats sparkline as Trend, count by application | sort -count
use_timepicker = 1

[Performance.LogicalDisk.Search]
search = search eventtype="perfmon_windows" $PerfmonHost$ Host="$PerfmonHostWildcard$" object="LogicalDisk" counter="$Counter$" instance="$Instance$" | stats sparkline(avg(Value)) as Trend avg(Value) as Average, max(Value) as Peak, latest(Value) as Current, latest(_time) as "Last Updated" by Host | convert ctime("Last Updated") | sort - Current | eval Average=round(Average, 2) | eval Peak=round(Peak, 2) | eval Current=round(Current, 2)
use_timepicker = 1
bindingconf = {"PerfmonHost": {"type": "or", "key": "Host"}}

[searchmanager388]
search = |`secrpt-users-smartcard-required($select386$)`

[HostInformationBrowser.PeakCpuUtilization.Search]
search = eventtype=perfmon_windows earliest_time=-1d object=Processor counter="% Processor Time" host="$HostMonitoringHost$" | sort -Value | dedup host | eval Value=round(Value) | where Value>50 | rangemap field=Value "50 - 60%"=50-59 "60 - 80%"=60-79 "> 80%"=80-100 | chart count(host), list(host) by range

[postprocess322]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager246]
search = eventtype=msad-successful-user-logons dest_nt_domain="$select242$" user="$select244$"|rename src as src_ip|`ip-to-host`|`fix-localhost`|lookup SiteInfo host|dedup consecutive=t Site,src_nt_host,src_ip|table _time,Site,src_nt_host,src_ip|rename src_nt_host as Workstation,src_ip as "IP Address"
							
use_timepicker = 1

[postprocess245]
search = |dedup src_user sortby src_user
parent = searchmanager241

[postprocess328]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.Timepicker

[searchmanager452]
search = |`secrpt-all-group-policies($ldaprecord.nt_domain$)`

[searchmanager209]
search = eventtype=msad-subnetinfo ForestName="$select_forestname$" Site="$select199$"|dedup Name|table Name,Location
use_timepicker = 1

[searchmanager161]
search = eventtype=msad-dc-health DomainNetBIOSName="$select159$"|dedup host|fields *
use_timepicker = 1

[searchmanager71]
search = eventtype=msad-ad-access Object_Type=groupPolicyContainer|eval adminuser=src_user|eval Object_Lookup_Name="CN={" . Object_Name_Guid . "}"|ldapfilter domain="$$src_nt_domain$$" search="($$Object_Lookup_Name$$)" attrs=displayName|`session-to-host`|fields *
use_timepicker = 1

[WindowsUpdate.SuccessfulWindowsUpdateByHost.Search]
search = search eventtype="Update_Successful" package=* host="$EventHost$"| dedup package, host | stats sparkline as Trend count by host | sort -count
use_timepicker = 1

[postprocess93]
search = dedup member_id|sort member_id
parent = searchmanager87

[Windows.EventDetails.Search]
search = | inputlookup windows_event_details

[searchmanager203]
search = eventtype=msad-dc-health ForestName="$select_forestname$" Site="$select199$"|dedup host|fields *
use_timepicker = 1

[searchmanager409]
search = |`secrpt-all-domain-controllers($select407$)`

[postprocess408]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[PrintMonitoring.Printer.Search]
search = | inputlookup windows_printmon | search Host="$PrintMonitoring.Host$" | dedup printer | sort printer

[searchmanager114]
search = eventtype=admon objectClass="*person*" NOT objectClass="*computer*" sAMAccountName="$textbox111$" $multidropdown_host$|dedup distinguishedName,uSNChanged|rex field=_raw "(?ms)Additional Details:\\s*[\\r\\n]+(?<MSADChangedAttributes>.*)"|`msad-changed-attributes`|table _time,sAMAccountName,MSADChanges|where mvcount(MSADChanges)>0
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[searchmanager117]
search = |inputlookup DomainSelector|stats count by host|table host|sort host
use_timepicker = 1

[searchmanager447]
search = |`secrpt-unused-computers($select445$)`

[ActiveDirectory.DNSPerformance.Search]
search = eventtype=perfmon-dns host="$ActiveDirectory.DNSPerformance.Host$" counter="$ActiveDirectory.DNSPerformance.Counter$"|timechart avg(Value) as "$ActiveDirectory.DNSPerformance.Counter$"|join _time [search eventtype=perfmon host="$ActiveDirectory.DNSPerformance.Host$" object=Processor counter="% Processor Time"|timechart avg(Value) as "% Processor Time"]
use_timepicker = 1

[Event.TaskCategories.Search]
search = search eventtype="wineventlog_windows" sourcetype="*inEventLog:$LogName$" (host="$EventHost$" OR ComputerName="$EventHost$") TaskCategory="$TaskCategory$"  SourceName="$SourceName$" EventCode="$EventCode$" Type="$Type$" $event.additional$ | stats sparkline as "Trend", count by TaskCategory | sort -count
use_timepicker = 1

[EventCode.Search]
search = search LogName="$LogName$" TaskCategory="$TaskCategory$" SourceName="$SourceName$" | dedup EventCode | sort EventCode
parent = Windows.EventDetails.Search

[RemoteHostName.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" Protocol="$Protocol$" PacketType="$PacketType$" | dedup RemoteHostName | sort RemoteHostName

[Performance.PhysicalDisk.Search.Instance]
search = search object="PhysicalDisk" | dedup instance | table instance | sort instance
parent = Windows.PerfmonDetails.Search

[postprocess528]
search = |dedup src_nt_domain|sort src_nt_domain
parent = Search.AdDomains.NoTimepicker

[searchmanager144]
search = eventtype=perfmon-dns counter="Total Query Received/sec"|stats sparkline(avg(Value),1m) as "Average Queries/sec" by host|join host [search eventtype=msad-dns-zoneinfo|stats values(Zone) as zz by host|eval zz=mvjoin(zz,";")|table host,zz]|join host [search eventtype=msad-dns-health|stats last(OperatingSystem) as "Operating System",last(ServicePack) as "Service Pack",last(ProcsOK) as ProcsOK by host]|eval Zones=split(zz,";")|table host,ProcsOK,Zones,"Operating System","Service Pack","Average Queries/sec"|sort -ProcsOK
use_timepicker = 1

[ActiveDirectory.DNSPerformance.InputBase]
search = eventtype=perfmon-dns|stats count by host,counter
use_timepicker = 1

[postprocess270]
search = search (Logon_Type=2 OR Logon_Type=3 OR Logon_Type=10) src_ip!="-"|`ip-to-host`|`fix-localhost`|stats dc(src_host) as hostcount,values(src_host) as Workstations by user,src_nt_domain|where hostcount>1|sort user,src_nt_domain|table user,src_nt_domain,Workstations|rename user as "Username",src_nt_domain as "Domain"
parent = searchmanager267

[searchmanager367]
search = |`secrpt-users-whose-password-doesnt-expire($select365$)`
use_timepicker = 1

[forestname_postprocess]
search = dedup ForestName|sort ForestName
parent = searchmanager198

[searchmanager198]
search = |inputlookup DomainSelector|stats count by ForestName,Site,DomainNetBIOSName
use_timepicker = 1

[searchmanager195]
search = eventtype=msad-rep-errors $multidropdown_host$|lookup EventCodes EventCode,LogName OUTPUTNEW desc|eval desc=if(isnull(desc),"Unknown EventCode",desc)|stats count by host,Type,EventCode,LogName,desc
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[searchmanager87]
search = (eventtype=msad-group-changes OR eventtype=msad-groupmembership-changes) $multidropdown_host$ NOT src_nt_domain="NT AUTHORITY"|fillnull value="*" member_id|eval adminuser=src_nt_domain."\\".src_user|stats count by adminuser,user_group,member_id,MSADGroupClass,MSADGroupType|fields *
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[LocalPort.Search]
search = | inputlookup windows_netmon_details | search Direction="$Direction$" Protocol="$Protocol$" PacketType="$PacketType$" RemoteHostName="$RemoteHostName$" RemotePort="$RemotePort$" | dedup LocalPort | sort LocalPort

[searchmanager191]
search = eventtype=msad-rep-health $multidropdown_host$|stats count by naming_context
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

[searchmanager193]
search = eventtype=msad-rep-health $multidropdown_host$ naming_context="$select192$"|dedup host,src_host,naming_context|table naming_context,src_host,host,transport,LastAttemptedSync,Result|rename naming_context as "Context",src_host as "Source",host as "Destination",transport as "Transport",LastAttemptedSync as "Last Attempted Sync",Result as "Error Code"
use_timepicker = 1
bindingconf = {"multidropdown_host": {"type": "or", "key": "host"}}

